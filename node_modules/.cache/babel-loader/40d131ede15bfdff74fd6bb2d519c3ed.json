{"ast":null,"code":"import { extend, defer, requestAnimationFrame } from \"../../utils/core\";\nimport DefaultViewManager from \"../default\";\nimport Snap from \"../helpers/snap\";\nimport { EVENTS } from \"../../utils/constants\";\nimport debounce from \"lodash/debounce\";\nclass ContinuousViewManager extends DefaultViewManager {\n  constructor(options) {\n    super(options);\n    this.name = \"continuous\";\n    this.settings = extend(this.settings || {}, {\n      infinite: true,\n      overflow: undefined,\n      axis: undefined,\n      writingMode: undefined,\n      flow: \"scrolled\",\n      offset: 500,\n      offsetDelta: 250,\n      width: undefined,\n      height: undefined,\n      snap: false,\n      afterScrolledTimeout: 10,\n      allowScriptedContent: false,\n      allowPopups: false\n    });\n    extend(this.settings, options.settings || {});\n\n    // Gap can be 0, but defaults doesn't handle that\n    if (options.settings.gap != \"undefined\" && options.settings.gap === 0) {\n      this.settings.gap = options.settings.gap;\n    }\n    this.viewSettings = {\n      ignoreClass: this.settings.ignoreClass,\n      axis: this.settings.axis,\n      flow: this.settings.flow,\n      layout: this.layout,\n      width: 0,\n      height: 0,\n      forceEvenPages: false,\n      allowScriptedContent: this.settings.allowScriptedContent,\n      allowPopups: this.settings.allowPopups\n    };\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n  }\n  display(section, target) {\n    return DefaultViewManager.prototype.display.call(this, section, target).then(function () {\n      return this.fill();\n    }.bind(this));\n  }\n  fill(_full) {\n    var full = _full || new defer();\n    this.q.enqueue(() => {\n      return this.check();\n    }).then(result => {\n      if (result) {\n        this.fill(full);\n      } else {\n        full.resolve();\n      }\n    });\n    return full.promise;\n  }\n  moveTo(offset) {\n    // var bounds = this.stage.bounds();\n    // var dist = Math.floor(offset.top / bounds.height) * bounds.height;\n    var distX = 0,\n      distY = 0;\n    var offsetX = 0,\n      offsetY = 0;\n    if (!this.isPaginated) {\n      distY = offset.top;\n      offsetY = offset.top + this.settings.offsetDelta;\n    } else {\n      distX = Math.floor(offset.left / this.layout.delta) * this.layout.delta;\n      offsetX = distX + this.settings.offsetDelta;\n    }\n    if (distX > 0 || distY > 0) {\n      this.scrollBy(distX, distY, true);\n    }\n  }\n  afterResized(view) {\n    this.emit(EVENTS.MANAGERS.RESIZE, view.section);\n  }\n\n  // Remove Previous Listeners if present\n  removeShownListeners(view) {\n    // view.off(\"shown\", this.afterDisplayed);\n    // view.off(\"shown\", this.afterDisplayedAbove);\n    view.onDisplayed = function () {};\n  }\n  add(section) {\n    var view = this.createView(section);\n    this.views.append(view);\n    view.on(EVENTS.VIEWS.RESIZED, bounds => {\n      view.expanded = true;\n    });\n    view.on(EVENTS.VIEWS.AXIS, axis => {\n      this.updateAxis(axis);\n    });\n    view.on(EVENTS.VIEWS.WRITING_MODE, mode => {\n      this.updateWritingMode(mode);\n    });\n\n    // view.on(EVENTS.VIEWS.SHOWN, this.afterDisplayed.bind(this));\n    view.onDisplayed = this.afterDisplayed.bind(this);\n    view.onResize = this.afterResized.bind(this);\n    return view.display(this.request);\n  }\n  append(section) {\n    var view = this.createView(section);\n    view.on(EVENTS.VIEWS.RESIZED, bounds => {\n      view.expanded = true;\n    });\n    view.on(EVENTS.VIEWS.AXIS, axis => {\n      this.updateAxis(axis);\n    });\n    view.on(EVENTS.VIEWS.WRITING_MODE, mode => {\n      this.updateWritingMode(mode);\n    });\n    this.views.append(view);\n    view.onDisplayed = this.afterDisplayed.bind(this);\n    return view;\n  }\n  prepend(section) {\n    var view = this.createView(section);\n    view.on(EVENTS.VIEWS.RESIZED, bounds => {\n      this.counter(bounds);\n      view.expanded = true;\n    });\n    view.on(EVENTS.VIEWS.AXIS, axis => {\n      this.updateAxis(axis);\n    });\n    view.on(EVENTS.VIEWS.WRITING_MODE, mode => {\n      this.updateWritingMode(mode);\n    });\n    this.views.prepend(view);\n    view.onDisplayed = this.afterDisplayed.bind(this);\n    return view;\n  }\n  counter(bounds) {\n    if (this.settings.axis === \"vertical\") {\n      this.scrollBy(0, bounds.heightDelta, true);\n    } else {\n      this.scrollBy(bounds.widthDelta, 0, true);\n    }\n  }\n  update(_offset) {\n    var container = this.bounds();\n    var views = this.views.all();\n    var viewsLength = views.length;\n    var visible = [];\n    var offset = typeof _offset != \"undefined\" ? _offset : this.settings.offset || 0;\n    var isVisible;\n    var view;\n    var updating = new defer();\n    var promises = [];\n    for (var i = 0; i < viewsLength; i++) {\n      view = views[i];\n      isVisible = this.isVisible(view, offset, offset, container);\n      if (isVisible === true) {\n        // console.log(\"visible \" + view.index, view.displayed);\n\n        if (!view.displayed) {\n          let displayed = view.display(this.request).then(function (view) {\n            view.show();\n          }, err => {\n            view.hide();\n          });\n          promises.push(displayed);\n        } else {\n          view.show();\n        }\n        visible.push(view);\n      } else {\n        this.q.enqueue(view.destroy.bind(view));\n        // console.log(\"hidden \" + view.index, view.displayed);\n\n        clearTimeout(this.trimTimeout);\n        this.trimTimeout = setTimeout(function () {\n          this.q.enqueue(this.trim.bind(this));\n        }.bind(this), 250);\n      }\n    }\n    if (promises.length) {\n      return Promise.all(promises).catch(err => {\n        updating.reject(err);\n      });\n    } else {\n      updating.resolve();\n      return updating.promise;\n    }\n  }\n  check(_offsetLeft, _offsetTop) {\n    var checking = new defer();\n    var newViews = [];\n    var horizontal = this.settings.axis === \"horizontal\";\n    var delta = this.settings.offset || 0;\n    if (_offsetLeft && horizontal) {\n      delta = _offsetLeft;\n    }\n    if (_offsetTop && !horizontal) {\n      delta = _offsetTop;\n    }\n    var bounds = this._bounds; // bounds saved this until resize\n\n    let offset = horizontal ? this.scrollLeft : this.scrollTop;\n    let visibleLength = horizontal ? Math.floor(bounds.width) : bounds.height;\n    let contentLength = horizontal ? this.container.scrollWidth : this.container.scrollHeight;\n    let writingMode = this.writingMode && this.writingMode.indexOf(\"vertical\") === 0 ? \"vertical\" : \"horizontal\";\n    let rtlScrollType = this.settings.rtlScrollType;\n    let rtl = this.settings.direction === \"rtl\";\n    if (!this.settings.fullsize) {\n      // Scroll offset starts at width of element\n      if (rtl && rtlScrollType === \"default\" && writingMode === \"horizontal\") {\n        offset = contentLength - visibleLength - offset;\n      }\n      // Scroll offset starts at 0 and goes negative\n      if (rtl && rtlScrollType === \"negative\" && writingMode === \"horizontal\") {\n        offset = offset * -1;\n      }\n    } else {\n      // Scroll offset starts at 0 and goes negative\n      if (horizontal && rtl && rtlScrollType === \"negative\" || !horizontal && rtl && rtlScrollType === \"default\") {\n        offset = offset * -1;\n      }\n    }\n    let prepend = () => {\n      let first = this.views.first();\n      let prev = first && first.section.prev();\n      if (prev) {\n        newViews.push(this.prepend(prev));\n      }\n    };\n    let append = () => {\n      let last = this.views.last();\n      let next = last && last.section.next();\n      if (next) {\n        newViews.push(this.append(next));\n      }\n    };\n    let end = offset + visibleLength + delta;\n    let start = offset - delta;\n    if (end >= contentLength) {\n      append();\n    }\n    if (start < 0) {\n      prepend();\n    }\n    let promises = newViews.map(view => {\n      return view.display(this.request);\n    });\n    if (newViews.length) {\n      return Promise.all(promises).then(() => {\n        return this.check();\n      }).then(() => {\n        // Check to see if anything new is on screen after rendering\n        return this.update(delta);\n      }, err => {\n        return err;\n      });\n    } else {\n      this.q.enqueue(function () {\n        this.update();\n      }.bind(this));\n      checking.resolve(false);\n      return checking.promise;\n    }\n  }\n  trim() {\n    var task = new defer();\n    var displayed = this.views.displayed();\n    var first = displayed[0];\n    var last = displayed[displayed.length - 1];\n    var firstIndex = this.views.indexOf(first);\n    var lastIndex = this.views.indexOf(last);\n    var above = this.views.slice(0, firstIndex);\n    var below = this.views.slice(lastIndex + 1);\n\n    // Erase all but last above\n    for (var i = 0; i < above.length - 1; i++) {\n      this.erase(above[i], above);\n    }\n\n    // Erase all except first below\n    for (var j = 1; j < below.length; j++) {\n      this.erase(below[j]);\n    }\n    task.resolve();\n    return task.promise;\n  }\n  erase(view, above) {\n    //Trim\n\n    var prevTop;\n    var prevLeft;\n    if (!this.settings.fullsize) {\n      prevTop = this.container.scrollTop;\n      prevLeft = this.container.scrollLeft;\n    } else {\n      prevTop = window.scrollY;\n      prevLeft = window.scrollX;\n    }\n    var bounds = view.bounds();\n    this.views.remove(view);\n    if (above) {\n      if (this.settings.axis === \"vertical\") {\n        this.scrollTo(0, prevTop - bounds.height, true);\n      } else {\n        if (this.settings.direction === 'rtl') {\n          if (!this.settings.fullsize) {\n            this.scrollTo(prevLeft, 0, true);\n          } else {\n            this.scrollTo(prevLeft + Math.floor(bounds.width), 0, true);\n          }\n        } else {\n          this.scrollTo(prevLeft - Math.floor(bounds.width), 0, true);\n        }\n      }\n    }\n  }\n  addEventListeners(stage) {\n    window.addEventListener(\"unload\", function (e) {\n      this.ignore = true;\n      // this.scrollTo(0,0);\n      this.destroy();\n    }.bind(this));\n    this.addScrollListeners();\n    if (this.isPaginated && this.settings.snap) {\n      this.snapper = new Snap(this, this.settings.snap && typeof this.settings.snap === \"object\" && this.settings.snap);\n    }\n  }\n  addScrollListeners() {\n    var scroller;\n    this.tick = requestAnimationFrame;\n    let dir = this.settings.direction === \"rtl\" && this.settings.rtlScrollType === \"default\" ? -1 : 1;\n    this.scrollDeltaVert = 0;\n    this.scrollDeltaHorz = 0;\n    if (!this.settings.fullsize) {\n      scroller = this.container;\n      this.scrollTop = this.container.scrollTop;\n      this.scrollLeft = this.container.scrollLeft;\n    } else {\n      scroller = window;\n      this.scrollTop = window.scrollY * dir;\n      this.scrollLeft = window.scrollX * dir;\n    }\n    this._onScroll = this.onScroll.bind(this);\n    scroller.addEventListener(\"scroll\", this._onScroll);\n    this._scrolled = debounce(this.scrolled.bind(this), 30);\n    // this.tick.call(window, this.onScroll.bind(this));\n\n    this.didScroll = false;\n  }\n  removeEventListeners() {\n    var scroller;\n    if (!this.settings.fullsize) {\n      scroller = this.container;\n    } else {\n      scroller = window;\n    }\n    scroller.removeEventListener(\"scroll\", this._onScroll);\n    this._onScroll = undefined;\n  }\n  onScroll() {\n    let scrollTop;\n    let scrollLeft;\n    let dir = this.settings.direction === \"rtl\" && this.settings.rtlScrollType === \"default\" ? -1 : 1;\n    if (!this.settings.fullsize) {\n      scrollTop = this.container.scrollTop;\n      scrollLeft = this.container.scrollLeft;\n    } else {\n      scrollTop = window.scrollY * dir;\n      scrollLeft = window.scrollX * dir;\n    }\n    this.scrollTop = scrollTop;\n    this.scrollLeft = scrollLeft;\n    if (!this.ignore) {\n      this._scrolled();\n    } else {\n      this.ignore = false;\n    }\n    this.scrollDeltaVert += Math.abs(scrollTop - this.prevScrollTop);\n    this.scrollDeltaHorz += Math.abs(scrollLeft - this.prevScrollLeft);\n    this.prevScrollTop = scrollTop;\n    this.prevScrollLeft = scrollLeft;\n    clearTimeout(this.scrollTimeout);\n    this.scrollTimeout = setTimeout(function () {\n      this.scrollDeltaVert = 0;\n      this.scrollDeltaHorz = 0;\n    }.bind(this), 150);\n    clearTimeout(this.afterScrolled);\n    this.didScroll = false;\n  }\n  scrolled() {\n    this.q.enqueue(function () {\n      return this.check();\n    }.bind(this));\n    this.emit(EVENTS.MANAGERS.SCROLL, {\n      top: this.scrollTop,\n      left: this.scrollLeft\n    });\n    clearTimeout(this.afterScrolled);\n    this.afterScrolled = setTimeout(function () {\n      // Don't report scroll if we are about the snap\n      if (this.snapper && this.snapper.supportsTouch && this.snapper.needsSnap()) {\n        return;\n      }\n      this.emit(EVENTS.MANAGERS.SCROLLED, {\n        top: this.scrollTop,\n        left: this.scrollLeft\n      });\n    }.bind(this), this.settings.afterScrolledTimeout);\n  }\n  next() {\n    let delta = this.layout.props.name === \"pre-paginated\" && this.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n    if (!this.views.length) return;\n    if (this.isPaginated && this.settings.axis === \"horizontal\") {\n      this.scrollBy(delta, 0, true);\n    } else {\n      this.scrollBy(0, this.layout.height, true);\n    }\n    this.q.enqueue(function () {\n      return this.check();\n    }.bind(this));\n  }\n  prev() {\n    let delta = this.layout.props.name === \"pre-paginated\" && this.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n    if (!this.views.length) return;\n    if (this.isPaginated && this.settings.axis === \"horizontal\") {\n      this.scrollBy(-delta, 0, true);\n    } else {\n      this.scrollBy(0, -this.layout.height, true);\n    }\n    this.q.enqueue(function () {\n      return this.check();\n    }.bind(this));\n  }\n  updateFlow(flow) {\n    if (this.rendered && this.snapper) {\n      this.snapper.destroy();\n      this.snapper = undefined;\n    }\n    super.updateFlow(flow, \"scroll\");\n    if (this.rendered && this.isPaginated && this.settings.snap) {\n      this.snapper = new Snap(this, this.settings.snap && typeof this.settings.snap === \"object\" && this.settings.snap);\n    }\n  }\n  destroy() {\n    super.destroy();\n    if (this.snapper) {\n      this.snapper.destroy();\n    }\n  }\n}\nexport default ContinuousViewManager;","map":{"version":3,"names":["extend","defer","requestAnimationFrame","DefaultViewManager","Snap","EVENTS","debounce","ContinuousViewManager","constructor","options","name","settings","infinite","overflow","undefined","axis","writingMode","flow","offset","offsetDelta","width","height","snap","afterScrolledTimeout","allowScriptedContent","allowPopups","gap","viewSettings","ignoreClass","layout","forceEvenPages","scrollTop","scrollLeft","display","section","target","prototype","call","then","fill","bind","_full","full","q","enqueue","check","result","resolve","promise","moveTo","distX","distY","offsetX","offsetY","isPaginated","top","Math","floor","left","delta","scrollBy","afterResized","view","emit","MANAGERS","RESIZE","removeShownListeners","onDisplayed","add","createView","views","append","on","VIEWS","RESIZED","bounds","expanded","AXIS","updateAxis","WRITING_MODE","mode","updateWritingMode","afterDisplayed","onResize","request","prepend","counter","heightDelta","widthDelta","update","_offset","container","all","viewsLength","length","visible","isVisible","updating","promises","i","displayed","show","err","hide","push","destroy","clearTimeout","trimTimeout","setTimeout","trim","Promise","catch","reject","_offsetLeft","_offsetTop","checking","newViews","horizontal","_bounds","visibleLength","contentLength","scrollWidth","scrollHeight","indexOf","rtlScrollType","rtl","direction","fullsize","first","prev","last","next","end","start","map","task","firstIndex","lastIndex","above","slice","below","erase","j","prevTop","prevLeft","window","scrollY","scrollX","remove","scrollTo","addEventListeners","stage","addEventListener","e","ignore","addScrollListeners","snapper","scroller","tick","dir","scrollDeltaVert","scrollDeltaHorz","_onScroll","onScroll","_scrolled","scrolled","didScroll","removeEventListeners","removeEventListener","abs","prevScrollTop","prevScrollLeft","scrollTimeout","afterScrolled","SCROLL","supportsTouch","needsSnap","SCROLLED","props","spread","updateFlow","rendered"],"sources":["/home/parallels/Downloads/react-epub-viewer-demo/node_modules/epubjs/src/managers/continuous/index.js"],"sourcesContent":["import {extend, defer, requestAnimationFrame} from \"../../utils/core\";\nimport DefaultViewManager from \"../default\";\nimport Snap from \"../helpers/snap\";\nimport { EVENTS } from \"../../utils/constants\";\nimport debounce from \"lodash/debounce\";\n\nclass ContinuousViewManager extends DefaultViewManager {\n\tconstructor(options) {\n\t\tsuper(options);\n\n\t\tthis.name = \"continuous\";\n\n\t\tthis.settings = extend(this.settings || {}, {\n\t\t\tinfinite: true,\n\t\t\toverflow: undefined,\n\t\t\taxis: undefined,\n\t\t\twritingMode: undefined,\n\t\t\tflow: \"scrolled\",\n\t\t\toffset: 500,\n\t\t\toffsetDelta: 250,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tsnap: false,\n\t\t\tafterScrolledTimeout: 10,\n\t\t\tallowScriptedContent: false,\n\t\t\tallowPopups: false\n\t\t});\n\n\t\textend(this.settings, options.settings || {});\n\n\t\t// Gap can be 0, but defaults doesn't handle that\n\t\tif (options.settings.gap != \"undefined\" && options.settings.gap === 0) {\n\t\t\tthis.settings.gap = options.settings.gap;\n\t\t}\n\n\t\tthis.viewSettings = {\n\t\t\tignoreClass: this.settings.ignoreClass,\n\t\t\taxis: this.settings.axis,\n\t\t\tflow: this.settings.flow,\n\t\t\tlayout: this.layout,\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tforceEvenPages: false,\n\t\t\tallowScriptedContent: this.settings.allowScriptedContent,\n\t\t\tallowPopups: this.settings.allowPopups\n\t\t};\n\n\t\tthis.scrollTop = 0;\n\t\tthis.scrollLeft = 0;\n\t}\n\n\tdisplay(section, target){\n\t\treturn DefaultViewManager.prototype.display.call(this, section, target)\n\t\t\t.then(function () {\n\t\t\t\treturn this.fill();\n\t\t\t}.bind(this));\n\t}\n\n\tfill(_full){\n\t\tvar full = _full || new defer();\n\n\t\tthis.q.enqueue(() => {\n\t\t\treturn this.check();\n\t\t}).then((result) => {\n\t\t\tif (result) {\n\t\t\t\tthis.fill(full);\n\t\t\t} else {\n\t\t\t\tfull.resolve();\n\t\t\t}\n\t\t});\n\n\t\treturn full.promise;\n\t}\n\n\tmoveTo(offset){\n\t\t// var bounds = this.stage.bounds();\n\t\t// var dist = Math.floor(offset.top / bounds.height) * bounds.height;\n\t\tvar distX = 0,\n\t\t\t\tdistY = 0;\n\n\t\tvar offsetX = 0,\n\t\t\t\toffsetY = 0;\n\n\t\tif(!this.isPaginated) {\n\t\t\tdistY = offset.top;\n\t\t\toffsetY = offset.top+this.settings.offsetDelta;\n\t\t} else {\n\t\t\tdistX = Math.floor(offset.left / this.layout.delta) * this.layout.delta;\n\t\t\toffsetX = distX+this.settings.offsetDelta;\n\t\t}\n\n\t\tif (distX > 0 || distY > 0) {\n\t\t\tthis.scrollBy(distX, distY, true);\n\t\t}\n\t}\n\n\tafterResized(view){\n\t\tthis.emit(EVENTS.MANAGERS.RESIZE, view.section);\n\t}\n\n\t// Remove Previous Listeners if present\n\tremoveShownListeners(view){\n\n\t\t// view.off(\"shown\", this.afterDisplayed);\n\t\t// view.off(\"shown\", this.afterDisplayedAbove);\n\t\tview.onDisplayed = function(){};\n\n\t}\n\n\tadd(section){\n\t\tvar view = this.createView(section);\n\n\t\tthis.views.append(view);\n\n\t\tview.on(EVENTS.VIEWS.RESIZED, (bounds) => {\n\t\t\tview.expanded = true;\n\t\t});\n\n\t\tview.on(EVENTS.VIEWS.AXIS, (axis) => {\n\t\t\tthis.updateAxis(axis);\n\t\t});\n\n\t\tview.on(EVENTS.VIEWS.WRITING_MODE, (mode) => {\n\t\t\tthis.updateWritingMode(mode);\n\t\t});\n\n\t\t// view.on(EVENTS.VIEWS.SHOWN, this.afterDisplayed.bind(this));\n\t\tview.onDisplayed = this.afterDisplayed.bind(this);\n\t\tview.onResize = this.afterResized.bind(this);\n\n\t\treturn view.display(this.request);\n\t}\n\n\tappend(section){\n\t\tvar view = this.createView(section);\n\n\t\tview.on(EVENTS.VIEWS.RESIZED, (bounds) => {\n\t\t\tview.expanded = true;\n\t\t});\n\n\t\tview.on(EVENTS.VIEWS.AXIS, (axis) => {\n\t\t\tthis.updateAxis(axis);\n\t\t});\n\n\t\tview.on(EVENTS.VIEWS.WRITING_MODE, (mode) => {\n\t\t\tthis.updateWritingMode(mode);\n\t\t});\n\n\t\tthis.views.append(view);\n\n\t\tview.onDisplayed = this.afterDisplayed.bind(this);\n\n\t\treturn view;\n\t}\n\n\tprepend(section){\n\t\tvar view = this.createView(section);\n\n\t\tview.on(EVENTS.VIEWS.RESIZED, (bounds) => {\n\t\t\tthis.counter(bounds);\n\t\t\tview.expanded = true;\n\t\t});\n\n\t\tview.on(EVENTS.VIEWS.AXIS, (axis) => {\n\t\t\tthis.updateAxis(axis);\n\t\t});\n\n\t\tview.on(EVENTS.VIEWS.WRITING_MODE, (mode) => {\n\t\t\tthis.updateWritingMode(mode);\n\t\t});\n\n\t\tthis.views.prepend(view);\n\n\t\tview.onDisplayed = this.afterDisplayed.bind(this);\n\n\t\treturn view;\n\t}\n\n\tcounter(bounds){\n\t\tif(this.settings.axis === \"vertical\") {\n\t\t\tthis.scrollBy(0, bounds.heightDelta, true);\n\t\t} else {\n\t\t\tthis.scrollBy(bounds.widthDelta, 0, true);\n\t\t}\n\t}\n\n\tupdate(_offset){\n\t\tvar container = this.bounds();\n\t\tvar views = this.views.all();\n\t\tvar viewsLength = views.length;\n\t\tvar visible = [];\n\t\tvar offset = typeof _offset != \"undefined\" ? _offset : (this.settings.offset || 0);\n\t\tvar isVisible;\n\t\tvar view;\n\n\t\tvar updating = new defer();\n\t\tvar promises = [];\n\t\tfor (var i = 0; i < viewsLength; i++) {\n\t\t\tview = views[i];\n\n\t\t\tisVisible = this.isVisible(view, offset, offset, container);\n\n\t\t\tif(isVisible === true) {\n\t\t\t\t// console.log(\"visible \" + view.index, view.displayed);\n\n\t\t\t\tif (!view.displayed) {\n\t\t\t\t\tlet displayed = view.display(this.request)\n\t\t\t\t\t\t.then(function (view) {\n\t\t\t\t\t\t\tview.show();\n\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\tview.hide();\n\t\t\t\t\t\t});\n\t\t\t\t\tpromises.push(displayed);\n\t\t\t\t} else {\n\t\t\t\t\tview.show();\n\t\t\t\t}\n\t\t\t\tvisible.push(view);\n\t\t\t} else {\n\t\t\t\tthis.q.enqueue(view.destroy.bind(view));\n\t\t\t\t// console.log(\"hidden \" + view.index, view.displayed);\n\n\t\t\t\tclearTimeout(this.trimTimeout);\n\t\t\t\tthis.trimTimeout = setTimeout(function(){\n\t\t\t\t\tthis.q.enqueue(this.trim.bind(this));\n\t\t\t\t}.bind(this), 250);\n\t\t\t}\n\n\t\t}\n\n\t\tif(promises.length){\n\t\t\treturn Promise.all(promises)\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tupdating.reject(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tupdating.resolve();\n\t\t\treturn updating.promise;\n\t\t}\n\n\t}\n\n\tcheck(_offsetLeft, _offsetTop){\n\t\tvar checking = new defer();\n\t\tvar newViews = [];\n\n\t\tvar horizontal = (this.settings.axis === \"horizontal\");\n\t\tvar delta = this.settings.offset || 0;\n\n\t\tif (_offsetLeft && horizontal) {\n\t\t\tdelta = _offsetLeft;\n\t\t}\n\n\t\tif (_offsetTop && !horizontal) {\n\t\t\tdelta = _offsetTop;\n\t\t}\n\n\t\tvar bounds = this._bounds; // bounds saved this until resize\n\n\t\tlet offset = horizontal ? this.scrollLeft : this.scrollTop;\n\t\tlet visibleLength = horizontal ? Math.floor(bounds.width) : bounds.height;\n\t\tlet contentLength = horizontal ? this.container.scrollWidth : this.container.scrollHeight;\n\t\tlet writingMode = (this.writingMode && this.writingMode.indexOf(\"vertical\") === 0) ? \"vertical\" : \"horizontal\";\n\t\tlet rtlScrollType = this.settings.rtlScrollType;\n\t\tlet rtl = this.settings.direction === \"rtl\";\n\n\t\tif (!this.settings.fullsize) {\n\t\t\t// Scroll offset starts at width of element\n\t\t\tif (rtl && rtlScrollType === \"default\" && writingMode === \"horizontal\") {\n\t\t\t\toffset = contentLength - visibleLength - offset;\n\t\t\t}\n\t\t\t// Scroll offset starts at 0 and goes negative\n\t\t\tif (rtl && rtlScrollType === \"negative\" && writingMode === \"horizontal\") {\n\t\t\t\toffset = offset * -1;\n\t\t\t}\n\t\t} else {\n\t\t\t// Scroll offset starts at 0 and goes negative\n\t\t\tif ((horizontal && rtl && rtlScrollType === \"negative\") ||\n\t\t\t\t(!horizontal && rtl && rtlScrollType === \"default\")) {\n\t\t\t\toffset = offset * -1;\n\t\t\t}\n\t\t}\n\n\t\tlet prepend = () => {\n\t\t\tlet first = this.views.first();\n\t\t\tlet prev = first && first.section.prev();\n\n\t\t\tif(prev) {\n\t\t\t\tnewViews.push(this.prepend(prev));\n\t\t\t}\n\t\t};\n\n\t\tlet append = () => {\n\t\t\tlet last = this.views.last();\n\t\t\tlet next = last && last.section.next();\n\n\t\t\tif(next) {\n\t\t\t\tnewViews.push(this.append(next));\n\t\t\t}\n\n\t\t};\n\n\t\tlet end = offset + visibleLength + delta;\n\t\tlet start = offset - delta;\n\n\t\tif (end >= contentLength) {\n\t\t\tappend();\n\t\t}\n\t\t\n\t\tif (start < 0) {\n\t\t\tprepend();\n\t\t}\n\t\t\n\n\t\tlet promises = newViews.map((view) => {\n\t\t\treturn view.display(this.request);\n\t\t});\n\n\t\tif(newViews.length){\n\t\t\treturn Promise.all(promises)\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn this.check();\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\t// Check to see if anything new is on screen after rendering\n\t\t\t\t\treturn this.update(delta);\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn err;\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.q.enqueue(function(){\n\t\t\t\tthis.update();\n\t\t\t}.bind(this));\n\t\t\tchecking.resolve(false);\n\t\t\treturn checking.promise;\n\t\t}\n\n\n\t}\n\n\ttrim(){\n\t\tvar task = new defer();\n\t\tvar displayed = this.views.displayed();\n\t\tvar first = displayed[0];\n\t\tvar last = displayed[displayed.length-1];\n\t\tvar firstIndex = this.views.indexOf(first);\n\t\tvar lastIndex = this.views.indexOf(last);\n\t\tvar above = this.views.slice(0, firstIndex);\n\t\tvar below = this.views.slice(lastIndex+1);\n\n\t\t// Erase all but last above\n\t\tfor (var i = 0; i < above.length-1; i++) {\n\t\t\tthis.erase(above[i], above);\n\t\t}\n\n\t\t// Erase all except first below\n\t\tfor (var j = 1; j < below.length; j++) {\n\t\t\tthis.erase(below[j]);\n\t\t}\n\n\t\ttask.resolve();\n\t\treturn task.promise;\n\t}\n\n\terase(view, above){ //Trim\n\n\t\tvar prevTop;\n\t\tvar prevLeft;\n\n\t\tif(!this.settings.fullsize) {\n\t\t\tprevTop = this.container.scrollTop;\n\t\t\tprevLeft = this.container.scrollLeft;\n\t\t} else {\n\t\t\tprevTop = window.scrollY;\n\t\t\tprevLeft = window.scrollX;\n\t\t}\n\n\t\tvar bounds = view.bounds();\n\n\t\tthis.views.remove(view);\n\t\t\n\t\tif(above) {\n\t\t\tif (this.settings.axis === \"vertical\") {\n\t\t\t\tthis.scrollTo(0, prevTop - bounds.height, true);\n\t\t\t} else {\n\t\t\t\tif(this.settings.direction === 'rtl') {\n\t\t\t\t\tif (!this.settings.fullsize) {\n\t\t\t\t\t\tthis.scrollTo(prevLeft, 0, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.scrollTo(prevLeft + Math.floor(bounds.width), 0, true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.scrollTo(prevLeft - Math.floor(bounds.width), 0, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\taddEventListeners(stage){\n\n\t\twindow.addEventListener(\"unload\", function(e){\n\t\t\tthis.ignore = true;\n\t\t\t// this.scrollTo(0,0);\n\t\t\tthis.destroy();\n\t\t}.bind(this));\n\n\t\tthis.addScrollListeners();\n\n\t\tif (this.isPaginated && this.settings.snap) {\n\t\t\tthis.snapper = new Snap(this, this.settings.snap && (typeof this.settings.snap === \"object\") && this.settings.snap);\n\t\t}\n\t}\n\n\taddScrollListeners() {\n\t\tvar scroller;\n\n\t\tthis.tick = requestAnimationFrame;\n\n\t\tlet dir = this.settings.direction === \"rtl\" && this.settings.rtlScrollType === \"default\" ? -1 : 1;\n\n\t\tthis.scrollDeltaVert = 0;\n\t\tthis.scrollDeltaHorz = 0;\n\n\t\tif(!this.settings.fullsize) {\n\t\t\tscroller = this.container;\n\t\t\tthis.scrollTop = this.container.scrollTop;\n\t\t\tthis.scrollLeft = this.container.scrollLeft;\n\t\t} else {\n\t\t\tscroller = window;\n\t\t\tthis.scrollTop = window.scrollY * dir;\n\t\t\tthis.scrollLeft = window.scrollX * dir;\n\t\t}\n\n\t\tthis._onScroll = this.onScroll.bind(this);\n\t\tscroller.addEventListener(\"scroll\", this._onScroll);\n\t\tthis._scrolled = debounce(this.scrolled.bind(this), 30);\n\t\t// this.tick.call(window, this.onScroll.bind(this));\n\n\t\tthis.didScroll = false;\n\n\t}\n\n\tremoveEventListeners(){\n\t\tvar scroller;\n\n\t\tif(!this.settings.fullsize) {\n\t\t\tscroller = this.container;\n\t\t} else {\n\t\t\tscroller = window;\n\t\t}\n\n\t\tscroller.removeEventListener(\"scroll\", this._onScroll);\n\t\tthis._onScroll = undefined;\n\t}\n\n\tonScroll(){\n\t\tlet scrollTop;\n\t\tlet scrollLeft;\n\t\tlet dir = this.settings.direction === \"rtl\" && this.settings.rtlScrollType === \"default\" ? -1 : 1;\n\n\t\tif(!this.settings.fullsize) {\n\t\t\tscrollTop = this.container.scrollTop;\n\t\t\tscrollLeft = this.container.scrollLeft;\n\t\t} else {\n\t\t\tscrollTop = window.scrollY * dir;\n\t\t\tscrollLeft = window.scrollX * dir;\n\t\t}\n\n\t\tthis.scrollTop = scrollTop;\n\t\tthis.scrollLeft = scrollLeft;\n\n\t\tif(!this.ignore) {\n\n\t\t\tthis._scrolled();\n\n\t\t} else {\n\t\t\tthis.ignore = false;\n\t\t}\n\n\t\tthis.scrollDeltaVert += Math.abs(scrollTop-this.prevScrollTop);\n\t\tthis.scrollDeltaHorz += Math.abs(scrollLeft-this.prevScrollLeft);\n\n\t\tthis.prevScrollTop = scrollTop;\n\t\tthis.prevScrollLeft = scrollLeft;\n\n\t\tclearTimeout(this.scrollTimeout);\n\t\tthis.scrollTimeout = setTimeout(function(){\n\t\t\tthis.scrollDeltaVert = 0;\n\t\t\tthis.scrollDeltaHorz = 0;\n\t\t}.bind(this), 150);\n\n\t\tclearTimeout(this.afterScrolled);\n\n\t\tthis.didScroll = false;\n\n\t}\n\n\tscrolled() {\n\n\t\tthis.q.enqueue(function() {\n\t\t\treturn this.check();\n\t\t}.bind(this));\n\n\t\tthis.emit(EVENTS.MANAGERS.SCROLL, {\n\t\t\ttop: this.scrollTop,\n\t\t\tleft: this.scrollLeft\n\t\t});\n\n\t\tclearTimeout(this.afterScrolled);\n\t\tthis.afterScrolled = setTimeout(function () {\n\n\t\t\t// Don't report scroll if we are about the snap\n\t\t\tif (this.snapper && this.snapper.supportsTouch && this.snapper.needsSnap()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emit(EVENTS.MANAGERS.SCROLLED, {\n\t\t\t\ttop: this.scrollTop,\n\t\t\t\tleft: this.scrollLeft\n\t\t\t});\n\n\t\t}.bind(this), this.settings.afterScrolledTimeout);\n\t}\n\n\tnext(){\n\n\t\tlet delta = this.layout.props.name === \"pre-paginated\" &&\n\t\t\t\t\t\t\t\tthis.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n\n\t\tif(!this.views.length) return;\n\n\t\tif(this.isPaginated && this.settings.axis === \"horizontal\") {\n\n\t\t\tthis.scrollBy(delta, 0, true);\n\n\t\t} else {\n\n\t\t\tthis.scrollBy(0, this.layout.height, true);\n\n\t\t}\n\n\t\tthis.q.enqueue(function() {\n\t\t\treturn this.check();\n\t\t}.bind(this));\n\t}\n\n\tprev(){\n\n\t\tlet delta = this.layout.props.name === \"pre-paginated\" &&\n\t\t\t\t\t\t\t\tthis.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n\n\t\tif(!this.views.length) return;\n\n\t\tif(this.isPaginated && this.settings.axis === \"horizontal\") {\n\n\t\t\tthis.scrollBy(-delta, 0, true);\n\n\t\t} else {\n\n\t\t\tthis.scrollBy(0, -this.layout.height, true);\n\n\t\t}\n\n\t\tthis.q.enqueue(function() {\n\t\t\treturn this.check();\n\t\t}.bind(this));\n\t}\n\n\tupdateFlow(flow){\n\t\tif (this.rendered && this.snapper) {\n\t\t\tthis.snapper.destroy();\n\t\t\tthis.snapper = undefined;\n\t\t}\n\n\t\tsuper.updateFlow(flow, \"scroll\");\n\n\t\tif (this.rendered && this.isPaginated && this.settings.snap) {\n\t\t\tthis.snapper = new Snap(this, this.settings.snap && (typeof this.settings.snap === \"object\") && this.settings.snap);\n\t\t}\n\t}\n\n\tdestroy(){\n\t\tsuper.destroy();\n\n\t\tif (this.snapper) {\n\t\t\tthis.snapper.destroy();\n\t\t}\n\t}\n\n}\n\nexport default ContinuousViewManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}