{"ast":null,"code":"import _slicedToArray from\"/home/parallels/Downloads/read/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useCallback}from'react';/**\n * Epub Reader 메뉴를 컨트롤 하는 hook\n * - control의 display를 Menu 생성/제거 플래그로 이용합니다.\n * - control의 show를 Animaton 플래그로 이용합니다.\n * - Menu 이외의 영역 클릭시 Close Event 발동\n *\n * @param ref DOM을 가지고 있는 useRef\n * @param delay 애니메이션 딜레이 시간(ms)\n * \n * @example\n * const Viewer = () => {\n *   const menuDelay = 300;\n * \n *   const ref = useRef<HTMLDivElement | null>(null);\n *   const [control, onToggle] = usemenu(ref, menuDelay);\n * \n *   return (<>\n *     <MenuOpenBtn onClick={onToggle} />\n *     <Menu control={control} onToggle={onToggle} ref={ref} />\n *   </>);\n * }\n * \n * const Menu = ({ control, onToggle }, ref) => {\n *   return (<>\n *     {control.display && <MenuWrapper show={control.show} \n *                                      delay={menuDelay}\n *                                      ref={ref}>\n *       <CloseBtn onClick={onToggle} />\n *     </MenuWrapper>}\n *   </>);\n * }\n * \n * const MenuWrapper = styled.div<{show: boolean; delay: boolean;}>`\n *   transform: ${({show}) => show\n *     ? \"translateX(0px)\"\n *     : \"translateX(420px)\"\n *   };\n *   transition: ${({delay}) => `${delay}ms ease`};\n * `;\n */function useMenu(ref,delay){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),eventSignal=_useState2[0],setEventSignal=_useState2[1];var _useState3=useState({display:false,open:false}),_useState4=_slicedToArray(_useState3,2),control=_useState4[0],setControl=_useState4[1];/** Menu 토글 */var onToggle=useCallback(function(){var event=null;window.clearTimeout(event);if(!control.display){setControl({display:true,open:false});event=window.setTimeout(function(){return setControl({display:true,open:true});},0);}else{setControl({display:true,open:false});event=window.setTimeout(function(){return setControl({display:false,open:false});},delay-50);}},[control.display,delay]);/** \n\t * 메뉴 닫기 \n\t * - Event path에서 메뉴가 포함되어있지 않으면, 함수를 실행합니다.\n\t */var onClose=useCallback(function(e){if(!ref||!ref.current)return;if(!e.path.includes(ref.current)){onToggle();}},[ref,onToggle]);/** \n\t * 이벤트 재등록\n\t * - '보기설정' 에서 rendition이 재 렌더링 될 때, 이벤트를 재등록하기 위한 함수\n\t * - Iframe 생성 시간 대기 [About 250ms]\n\t */var emitEvent=useCallback(function(){window.setTimeout(function(){return setEventSignal(true);},300);},[setEventSignal]);/** \n\t * 목차 닫기 이벤트 등록 \n\t * - Epub이 iframe으로 등록되므로, iframe에도 Event를 등록시켜줍니다.\n\t */useEffect(function(){if(!eventSignal&&!control.display)return;var epubIframe=document.querySelector('iframe');if(control.display){document.addEventListener('click',onClose);if(epubIframe&&epubIframe.contentWindow){epubIframe.contentWindow.document.addEventListener('click',onClose);}}else{document.removeEventListener('click',onClose);if(epubIframe&&epubIframe.contentWindow){epubIframe.contentWindow.document.removeEventListener('click',onClose);}}setEventSignal(false);return function(){document.removeEventListener('click',onClose);if(epubIframe&&epubIframe.contentWindow){epubIframe.contentWindow.document.removeEventListener('click',onClose);}};},[control.display,onClose,eventSignal]);return[control,onToggle,emitEvent];}export default useMenu;","map":{"version":3,"names":["useState","useEffect","useCallback","useMenu","ref","delay","eventSignal","setEventSignal","display","open","control","setControl","onToggle","event","window","clearTimeout","setTimeout","onClose","e","current","path","includes","emitEvent","epubIframe","document","querySelector","addEventListener","contentWindow","removeEventListener"],"sources":["/home/parallels/Downloads/read/src/lib/hooks/useMenu.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\n/**\n * Epub Reader 메뉴를 컨트롤 하는 hook\n * - control의 display를 Menu 생성/제거 플래그로 이용합니다.\n * - control의 show를 Animaton 플래그로 이용합니다.\n * - Menu 이외의 영역 클릭시 Close Event 발동\n *\n * @param ref DOM을 가지고 있는 useRef\n * @param delay 애니메이션 딜레이 시간(ms)\n * \n * @example\n * const Viewer = () => {\n *   const menuDelay = 300;\n * \n *   const ref = useRef<HTMLDivElement | null>(null);\n *   const [control, onToggle] = usemenu(ref, menuDelay);\n * \n *   return (<>\n *     <MenuOpenBtn onClick={onToggle} />\n *     <Menu control={control} onToggle={onToggle} ref={ref} />\n *   </>);\n * }\n * \n * const Menu = ({ control, onToggle }, ref) => {\n *   return (<>\n *     {control.display && <MenuWrapper show={control.show} \n *                                      delay={menuDelay}\n *                                      ref={ref}>\n *       <CloseBtn onClick={onToggle} />\n *     </MenuWrapper>}\n *   </>);\n * }\n * \n * const MenuWrapper = styled.div<{show: boolean; delay: boolean;}>`\n *   transform: ${({show}) => show\n *     ? \"translateX(0px)\"\n *     : \"translateX(420px)\"\n *   };\n *   transition: ${({delay}) => `${delay}ms ease`};\n * `;\n */\nfunction useMenu(ref: { current: any }, delay: number) {\n\tconst [eventSignal, setEventSignal] = useState<boolean>(true);\n\tconst [control, setControl] = useState<MenuControl>({\n\t\tdisplay: false,\n\t\topen: false\n\t});\n\t\n\n\t/** Menu 토글 */\n\tconst onToggle = useCallback(() => {\n\t\tlet event: any = null;\n\t\twindow.clearTimeout(event);\n\t\tif (!control.display) {\n\t\t\tsetControl({ display: true, open: false });\n\t\t\tevent = window.setTimeout(() => setControl({ display: true, open: true}), 0);\n\t\t} else {\n\t\t\tsetControl({ display: true, open: false });\n\t\t\tevent = window.setTimeout(() => setControl({ display: false, open: false }), delay - 50);\n\t\t}\n\t}, [control.display, delay]);\n\n\t/** \n\t * 메뉴 닫기 \n\t * - Event path에서 메뉴가 포함되어있지 않으면, 함수를 실행합니다.\n\t */\n  const onClose = useCallback((e: any) => {\n    if (!ref || !ref.current) return;\n    if (!e.path.includes(ref.current)) {\n\t\t\tonToggle();\n    }\n  }, [ref, onToggle]);\n\n\t/** \n\t * 이벤트 재등록\n\t * - '보기설정' 에서 rendition이 재 렌더링 될 때, 이벤트를 재등록하기 위한 함수\n\t * - Iframe 생성 시간 대기 [About 250ms]\n\t */\n\tconst emitEvent = useCallback(() => {\n\t\twindow.setTimeout(() => setEventSignal(true), 300);\n\t}, [setEventSignal]); \n\n\n  /** \n\t * 목차 닫기 이벤트 등록 \n\t * - Epub이 iframe으로 등록되므로, iframe에도 Event를 등록시켜줍니다.\n\t */\n  useEffect(() => {\n\t\tif (!eventSignal && !control.display) return;\n\t\t\n    const epubIframe = document.querySelector('iframe');\n\n\t\tif (control.display) {\n\t\t\tdocument.addEventListener('click', onClose);\n\t\t\tif (epubIframe && epubIframe.contentWindow) {\n\t\t\t\tepubIframe.contentWindow.document.addEventListener('click', onClose);\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.removeEventListener('click', onClose);\n      if (epubIframe && epubIframe.contentWindow) {\n\t\t\t\tepubIframe.contentWindow.document.removeEventListener('click', onClose);\n      }\n\t\t}\n\n\t\tsetEventSignal(false);\n  \n    return () => {\n      document.removeEventListener('click', onClose);\n      if (epubIframe && epubIframe.contentWindow) {\n\t\t\t\tepubIframe.contentWindow.document.removeEventListener('click', onClose);\n      }\n    }\n  }, [control.display, onClose, eventSignal]);\n\n\treturn [control, onToggle, emitEvent] as const;\n}\n\nexport type MenuControl = {\n\tdisplay: boolean;\n\topen: boolean;\n}\n\nexport default useMenu"],"mappings":"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"},"metadata":{},"sourceType":"module"}