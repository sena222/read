{"ast":null,"code":"var _jsxFileName = \"/home/parallels/Downloads/react-epub-viewer-demo/src/containers/menu/commons/Highlight.tsx\",\n  _s = $RefreshSig$();\nimport { useDispatch } from 'react-redux';\n// components\nimport Wrapper from 'components/note/highlight/Wrapper';\nimport Title from 'components/note/highlight/Title';\nimport Post from 'components/note/highlight/Post';\n// slices\nimport { updateHighlight } from 'slices/book';\n// utils\nimport { cfiRangeSpliter } from 'lib/utils/commonUtil';\n// types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Highlight = _ref => {\n  _s();\n  let {\n    highlight,\n    onClick,\n    emitEvent,\n    viewerRef\n  } = _ref;\n  const dispatch = useDispatch();\n\n  /** 하이라이트 클릭 */\n  const onClickHighlight = () => {\n    if (!viewerRef.current) return;\n    const now = new Date().toISOString();\n    dispatch(updateHighlight({\n      ...highlight,\n      accessTime: now\n    }));\n    const splitCfi = cfiRangeSpliter(highlight.cfiRange);\n    if (!splitCfi) return;\n    const {\n      startCfi\n    } = splitCfi;\n    viewerRef.current.setLocation(startCfi);\n    emitEvent();\n    const svgContainer = viewerRef.current.querySelector(\"svg\");\n    if (!svgContainer) return;\n    const targetSvg = svgContainer.querySelector(`g[data-epubcfi=\"${highlight.cfiRange}\"]`);\n    if (!targetSvg) return;\n    onClick(targetSvg.childNodes[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    onClick: onClickHighlight,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: highlight.chpaterName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Post, {\n        color: highlight.color,\n        children: highlight.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Highlight, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = Highlight;\nexport default Highlight;\nvar _c;\n$RefreshReg$(_c, \"Highlight\");","map":{"version":3,"names":["useDispatch","Wrapper","Title","Post","updateHighlight","cfiRangeSpliter","Highlight","highlight","onClick","emitEvent","viewerRef","dispatch","onClickHighlight","current","now","Date","toISOString","accessTime","splitCfi","cfiRange","startCfi","setLocation","svgContainer","querySelector","targetSvg","childNodes","chpaterName","color","content"],"sources":["/home/parallels/Downloads/react-epub-viewer-demo/src/containers/menu/commons/Highlight.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux'\n// components\nimport Wrapper from 'components/note/highlight/Wrapper'\nimport Title from 'components/note/highlight/Title'\nimport Post from 'components/note/highlight/Post'\n// slices\nimport { updateHighlight } from 'slices/book'\n// utils\nimport { cfiRangeSpliter } from 'lib/utils/commonUtil'\n// types\nimport HighlightType from 'types/highlight'\n\nconst Highlight = ({ \n  highlight, \n  onClick, \n  emitEvent, \n  viewerRef\n}: Props) => {\n  const dispatch = useDispatch();\n\n\n  /** 하이라이트 클릭 */\n  const onClickHighlight = () => {\n    if (!viewerRef.current) return;\n    \n    const now = new Date().toISOString();\n    dispatch(updateHighlight({\n      ...highlight,\n      accessTime: now\n    }));\n\n    const splitCfi = cfiRangeSpliter(highlight.cfiRange);\n    if (!splitCfi) return;\n\n    const { startCfi } = splitCfi;\n\n    viewerRef.current.setLocation(startCfi);\n\n    emitEvent();\n\n    const svgContainer = viewerRef.current.querySelector(\"svg\");\n    if (!svgContainer) return;\n\n    const targetSvg = svgContainer.querySelector(`g[data-epubcfi=\"${highlight.cfiRange}\"]`);\n    if (!targetSvg) return;\n\n    onClick(targetSvg.childNodes[0]);\n  }\n  \n  return (\n    <Wrapper onClick={onClickHighlight}>\n      <div>\n        <Title>{highlight.chpaterName}</Title>\n\n        <Post color={highlight.color}>{highlight.content}</Post>\n      </div>\n    </Wrapper>\n  );\n}\n\ninterface Props {\n  highlight: HighlightType;\n  onClick: (highlightNode: any) => void;\n  emitEvent: () => void;\n  viewerRef: any;\n}\n\nexport default Highlight"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC;AACA,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAOC,IAAI,MAAM,gCAAgC;AACjD;AACA,SAASC,eAAe,QAAQ,aAAa;AAC7C;AACA,SAASC,eAAe,QAAQ,sBAAsB;AACtD;AAAA;AAGA,MAAMC,SAAS,GAAG,QAKL;EAAA;EAAA,IALM;IACjBC,SAAS;IACTC,OAAO;IACPC,SAAS;IACTC;EACK,CAAC;EACN,MAAMC,QAAQ,GAAGX,WAAW,EAAE;;EAG9B;EACA,MAAMY,gBAAgB,GAAG,MAAM;IAC7B,IAAI,CAACF,SAAS,CAACG,OAAO,EAAE;IAExB,MAAMC,GAAG,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;IACpCL,QAAQ,CAACP,eAAe,CAAC;MACvB,GAAGG,SAAS;MACZU,UAAU,EAAEH;IACd,CAAC,CAAC,CAAC;IAEH,MAAMI,QAAQ,GAAGb,eAAe,CAACE,SAAS,CAACY,QAAQ,CAAC;IACpD,IAAI,CAACD,QAAQ,EAAE;IAEf,MAAM;MAAEE;IAAS,CAAC,GAAGF,QAAQ;IAE7BR,SAAS,CAACG,OAAO,CAACQ,WAAW,CAACD,QAAQ,CAAC;IAEvCX,SAAS,EAAE;IAEX,MAAMa,YAAY,GAAGZ,SAAS,CAACG,OAAO,CAACU,aAAa,CAAC,KAAK,CAAC;IAC3D,IAAI,CAACD,YAAY,EAAE;IAEnB,MAAME,SAAS,GAAGF,YAAY,CAACC,aAAa,CAAE,mBAAkBhB,SAAS,CAACY,QAAS,IAAG,CAAC;IACvF,IAAI,CAACK,SAAS,EAAE;IAEhBhB,OAAO,CAACgB,SAAS,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACE,QAAC,OAAO;IAAC,OAAO,EAAEb,gBAAiB;IAAA,uBACjC;MAAA,wBACE,QAAC,KAAK;QAAA,UAAEL,SAAS,CAACmB;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS,eAEtC,QAAC,IAAI;QAAC,KAAK,EAAEnB,SAAS,CAACoB,KAAM;QAAA,UAAEpB,SAAS,CAACqB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACpD;IAAA;IAAA;IAAA;EAAA,QACE;AAEd,CAAC;AAAA,GA9CKtB,SAAS;EAAA,QAMIN,WAAW;AAAA;AAAA,KANxBM,SAAS;AAuDf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}