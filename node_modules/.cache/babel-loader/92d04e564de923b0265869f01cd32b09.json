{"ast":null,"code":"import _classCallCheck from \"/home/parallels/Downloads/read/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/parallels/Downloads/read/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { defer } from \"./utils/core\";\nimport EpubCFI from \"./epubcfi\";\nimport Hook from \"./utils/hook\";\nimport { sprint } from \"./utils/core\";\nimport { replaceBase } from \"./utils/replacements\";\nimport Request from \"./utils/request\";\nimport { DOMParser as XMLDOMSerializer } from \"@xmldom/xmldom\";\n\n/**\n * Represents a Section of the Book\n *\n * In most books this is equivalent to a Chapter\n * @param {object} item  The spine item representing the section\n * @param {object} hooks hooks for serialize and content\n */\nvar Section = /*#__PURE__*/function () {\n  function Section(item, hooks) {\n    _classCallCheck(this, Section);\n    this.idref = item.idref;\n    this.linear = item.linear === \"yes\";\n    this.properties = item.properties;\n    this.index = item.index;\n    this.href = item.href;\n    this.url = item.url;\n    this.canonical = item.canonical;\n    this.next = item.next;\n    this.prev = item.prev;\n    this.cfiBase = item.cfiBase;\n    if (hooks) {\n      this.hooks = hooks;\n    } else {\n      this.hooks = {};\n      this.hooks.serialize = new Hook(this);\n      this.hooks.content = new Hook(this);\n    }\n    this.document = undefined;\n    this.contents = undefined;\n    this.output = undefined;\n  }\n\n  /**\n   * Load the section from its url\n   * @param  {method} [_request] a request method to use for loading\n   * @return {document} a promise with the xml document\n   */\n  _createClass(Section, [{\n    key: \"load\",\n    value: function load(_request) {\n      var request = _request || this.request || Request;\n      var loading = new defer();\n      var loaded = loading.promise;\n      if (this.contents) {\n        loading.resolve(this.contents);\n      } else {\n        request(this.url).then(function (xml) {\n          // var directory = new Url(this.url).directory;\n\n          this.document = xml;\n          this.contents = xml.documentElement;\n          return this.hooks.content.trigger(this.document, this);\n        }.bind(this)).then(function () {\n          loading.resolve(this.contents);\n        }.bind(this)).catch(function (error) {\n          loading.reject(error);\n        });\n      }\n      return loaded;\n    }\n\n    /**\n     * Adds a base tag for resolving urls in the section\n     * @private\n     */\n  }, {\n    key: \"base\",\n    value: function base() {\n      return replaceBase(this.document, this);\n    }\n\n    /**\n     * Render the contents of a section\n     * @param  {method} [_request] a request method to use for loading\n     * @return {string} output a serialized XML Document\n     */\n  }, {\n    key: \"render\",\n    value: function render(_request) {\n      var rendering = new defer();\n      var rendered = rendering.promise;\n      this.output; // TODO: better way to return this from hooks?\n\n      this.load(_request).then(function (contents) {\n        var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n        var isIE = userAgent.indexOf('Trident') >= 0;\n        var Serializer;\n        if (typeof XMLSerializer === \"undefined\" || isIE) {\n          Serializer = XMLDOMSerializer;\n        } else {\n          Serializer = XMLSerializer;\n        }\n        var serializer = new Serializer();\n        this.output = serializer.serializeToString(contents);\n        return this.output;\n      }.bind(this)).then(function () {\n        return this.hooks.serialize.trigger(this.output, this);\n      }.bind(this)).then(function () {\n        rendering.resolve(this.output);\n      }.bind(this)).catch(function (error) {\n        rendering.reject(error);\n      });\n      return rendered;\n    }\n\n    /**\n     * Find a string in a section\n     * @param  {string} _query The query string to find\n     * @return {object[]} A list of matches, with form {cfi, excerpt}\n     */\n  }, {\n    key: \"find\",\n    value: function find(_query) {\n      var section = this;\n      var matches = [];\n      var query = _query.toLowerCase();\n      var find = function find(node) {\n        var text = node.textContent.toLowerCase();\n        var range = section.document.createRange();\n        var cfi;\n        var pos;\n        var last = -1;\n        var excerpt;\n        var limit = 150;\n        while (pos != -1) {\n          // Search for the query\n          pos = text.indexOf(query, last + 1);\n          if (pos != -1) {\n            // We found it! Generate a CFI\n            range = section.document.createRange();\n            range.setStart(node, pos);\n            range.setEnd(node, pos + query.length);\n            cfi = section.cfiFromRange(range);\n\n            // Generate the excerpt\n            if (node.textContent.length < limit) {\n              excerpt = node.textContent;\n            } else {\n              excerpt = node.textContent.substring(pos - limit / 2, pos + limit / 2);\n              excerpt = \"...\" + excerpt + \"...\";\n            }\n\n            // Add the CFI to the matches list\n            matches.push({\n              cfi: cfi,\n              excerpt: excerpt\n            });\n          }\n          last = pos;\n        }\n      };\n      sprint(section.document, function (node) {\n        find(node);\n      });\n      return matches;\n    }\n  }, {\n    key: \"search\",\n    value:\n    /**\n     * Search a string in multiple sequential Element of the section. If the document.createTreeWalker api is missed(eg: IE8), use `find` as a fallback.\n     * @param  {string} _query The query string to search\n     * @param  {int} maxSeqEle The maximum number of Element that are combined for search, default value is 5.\n     * @return {object[]} A list of matches, with form {cfi, excerpt}\n     */\n    function search(_query) {\n      var maxSeqEle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n      if (typeof document.createTreeWalker == \"undefined\") {\n        return this.find(_query);\n      }\n      var matches = [];\n      var excerptLimit = 150;\n      var section = this;\n      var query = _query.toLowerCase();\n      var search = function search(nodeList) {\n        var textWithCase = nodeList.reduce(function (acc, current) {\n          return acc + current.textContent;\n        }, \"\");\n        var text = textWithCase.toLowerCase();\n        var pos = text.indexOf(query);\n        if (pos != -1) {\n          var startNodeIndex = 0,\n            endPos = pos + query.length;\n          var endNodeIndex = 0,\n            l = 0;\n          if (pos < nodeList[startNodeIndex].length) {\n            var cfi;\n            while (endNodeIndex < nodeList.length - 1) {\n              l += nodeList[endNodeIndex].length;\n              if (endPos <= l) {\n                break;\n              }\n              endNodeIndex += 1;\n            }\n            var startNode = nodeList[startNodeIndex],\n              endNode = nodeList[endNodeIndex];\n            var range = section.document.createRange();\n            range.setStart(startNode, pos);\n            var beforeEndLengthCount = nodeList.slice(0, endNodeIndex).reduce(function (acc, current) {\n              return acc + current.textContent.length;\n            }, 0);\n            range.setEnd(endNode, beforeEndLengthCount > endPos ? endPos : endPos - beforeEndLengthCount);\n            cfi = section.cfiFromRange(range);\n            var excerpt = nodeList.slice(0, endNodeIndex + 1).reduce(function (acc, current) {\n              return acc + current.textContent;\n            }, \"\");\n            if (excerpt.length > excerptLimit) {\n              excerpt = excerpt.substring(pos - excerptLimit / 2, pos + excerptLimit / 2);\n              excerpt = \"...\" + excerpt + \"...\";\n            }\n            matches.push({\n              cfi: cfi,\n              excerpt: excerpt\n            });\n          }\n        }\n      };\n      var treeWalker = document.createTreeWalker(section.document, NodeFilter.SHOW_TEXT, null, false);\n      var node,\n        nodeList = [];\n      while (node = treeWalker.nextNode()) {\n        nodeList.push(node);\n        if (nodeList.length == maxSeqEle) {\n          search(nodeList.slice(0, maxSeqEle));\n          nodeList = nodeList.slice(1, maxSeqEle);\n        }\n      }\n      if (nodeList.length > 0) {\n        search(nodeList);\n      }\n      return matches;\n    }\n\n    /**\n    * Reconciles the current chapters layout properties with\n    * the global layout properties.\n    * @param {object} globalLayout  The global layout settings object, chapter properties string\n    * @return {object} layoutProperties Object with layout properties\n    */\n  }, {\n    key: \"reconcileLayoutSettings\",\n    value: function reconcileLayoutSettings(globalLayout) {\n      //-- Get the global defaults\n      var settings = {\n        layout: globalLayout.layout,\n        spread: globalLayout.spread,\n        orientation: globalLayout.orientation\n      };\n\n      //-- Get the chapter's display type\n      this.properties.forEach(function (prop) {\n        var rendition = prop.replace(\"rendition:\", \"\");\n        var split = rendition.indexOf(\"-\");\n        var property, value;\n        if (split != -1) {\n          property = rendition.slice(0, split);\n          value = rendition.slice(split + 1);\n          settings[property] = value;\n        }\n      });\n      return settings;\n    }\n\n    /**\n     * Get a CFI from a Range in the Section\n     * @param  {range} _range\n     * @return {string} cfi an EpubCFI string\n     */\n  }, {\n    key: \"cfiFromRange\",\n    value: function cfiFromRange(_range) {\n      return new EpubCFI(_range, this.cfiBase).toString();\n    }\n\n    /**\n     * Get a CFI from an Element in the Section\n     * @param  {element} el\n     * @return {string} cfi an EpubCFI string\n     */\n  }, {\n    key: \"cfiFromElement\",\n    value: function cfiFromElement(el) {\n      return new EpubCFI(el, this.cfiBase).toString();\n    }\n\n    /**\n     * Unload the section document\n     */\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.document = undefined;\n      this.contents = undefined;\n      this.output = undefined;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.unload();\n      this.hooks.serialize.clear();\n      this.hooks.content.clear();\n      this.hooks = undefined;\n      this.idref = undefined;\n      this.linear = undefined;\n      this.properties = undefined;\n      this.index = undefined;\n      this.href = undefined;\n      this.url = undefined;\n      this.next = undefined;\n      this.prev = undefined;\n      this.cfiBase = undefined;\n    }\n  }]);\n  return Section;\n}();\nexport default Section;","map":{"version":3,"names":["defer","EpubCFI","Hook","sprint","replaceBase","Request","DOMParser","XMLDOMSerializer","Section","item","hooks","idref","linear","properties","index","href","url","canonical","next","prev","cfiBase","serialize","content","document","undefined","contents","output","_request","request","loading","loaded","promise","resolve","then","xml","documentElement","trigger","bind","catch","error","reject","rendering","rendered","load","userAgent","navigator","isIE","indexOf","Serializer","XMLSerializer","serializer","serializeToString","_query","section","matches","query","toLowerCase","find","node","text","textContent","range","createRange","cfi","pos","last","excerpt","limit","setStart","setEnd","length","cfiFromRange","substring","push","maxSeqEle","createTreeWalker","excerptLimit","search","nodeList","textWithCase","reduce","acc","current","startNodeIndex","endPos","endNodeIndex","l","startNode","endNode","beforeEndLengthCount","slice","treeWalker","NodeFilter","SHOW_TEXT","nextNode","globalLayout","settings","layout","spread","orientation","forEach","prop","rendition","replace","split","property","value","_range","toString","el","unload","clear"],"sources":["/home/parallels/Downloads/read/node_modules/epubjs/src/section.js"],"sourcesContent":["import { defer } from \"./utils/core\";\nimport EpubCFI from \"./epubcfi\";\nimport Hook from \"./utils/hook\";\nimport { sprint } from \"./utils/core\";\nimport { replaceBase } from \"./utils/replacements\";\nimport Request from \"./utils/request\";\nimport { DOMParser as XMLDOMSerializer } from \"@xmldom/xmldom\";\n\n/**\n * Represents a Section of the Book\n *\n * In most books this is equivalent to a Chapter\n * @param {object} item  The spine item representing the section\n * @param {object} hooks hooks for serialize and content\n */\nclass Section {\n\tconstructor(item, hooks){\n\t\tthis.idref = item.idref;\n\t\tthis.linear = item.linear === \"yes\";\n\t\tthis.properties = item.properties;\n\t\tthis.index = item.index;\n\t\tthis.href = item.href;\n\t\tthis.url = item.url;\n\t\tthis.canonical = item.canonical;\n\t\tthis.next = item.next;\n\t\tthis.prev = item.prev;\n\n\t\tthis.cfiBase = item.cfiBase;\n\n\t\tif (hooks) {\n\t\t\tthis.hooks = hooks;\n\t\t} else {\n\t\t\tthis.hooks = {};\n\t\t\tthis.hooks.serialize = new Hook(this);\n\t\t\tthis.hooks.content = new Hook(this);\n\t\t}\n\n\t\tthis.document = undefined;\n\t\tthis.contents = undefined;\n\t\tthis.output = undefined;\n\t}\n\n\t/**\n\t * Load the section from its url\n\t * @param  {method} [_request] a request method to use for loading\n\t * @return {document} a promise with the xml document\n\t */\n\tload(_request){\n\t\tvar request = _request || this.request || Request;\n\t\tvar loading = new defer();\n\t\tvar loaded = loading.promise;\n\n\t\tif(this.contents) {\n\t\t\tloading.resolve(this.contents);\n\t\t} else {\n\t\t\trequest(this.url)\n\t\t\t\t.then(function(xml){\n\t\t\t\t\t// var directory = new Url(this.url).directory;\n\n\t\t\t\t\tthis.document = xml;\n\t\t\t\t\tthis.contents = xml.documentElement;\n\n\t\t\t\t\treturn this.hooks.content.trigger(this.document, this);\n\t\t\t\t}.bind(this))\n\t\t\t\t.then(function(){\n\t\t\t\t\tloading.resolve(this.contents);\n\t\t\t\t}.bind(this))\n\t\t\t\t.catch(function(error){\n\t\t\t\t\tloading.reject(error);\n\t\t\t\t});\n\t\t}\n\n\t\treturn loaded;\n\t}\n\n\t/**\n\t * Adds a base tag for resolving urls in the section\n\t * @private\n\t */\n\tbase(){\n\t\treturn replaceBase(this.document, this);\n\t}\n\n\t/**\n\t * Render the contents of a section\n\t * @param  {method} [_request] a request method to use for loading\n\t * @return {string} output a serialized XML Document\n\t */\n\trender(_request){\n\t\tvar rendering = new defer();\n\t\tvar rendered = rendering.promise;\n\t\tthis.output; // TODO: better way to return this from hooks?\n\n\t\tthis.load(_request).\n\t\t\tthen(function(contents){\n\t\t\t\tvar userAgent = (typeof navigator !== 'undefined' && navigator.userAgent) || '';\n\t\t\t\tvar isIE = userAgent.indexOf('Trident') >= 0;\n\t\t\t\tvar Serializer;\n\t\t\t\tif (typeof XMLSerializer === \"undefined\" || isIE) {\n\t\t\t\t\tSerializer = XMLDOMSerializer;\n\t\t\t\t} else {\n\t\t\t\t\tSerializer = XMLSerializer;\n\t\t\t\t}\n\t\t\t\tvar serializer = new Serializer();\n\t\t\t\tthis.output = serializer.serializeToString(contents);\n\t\t\t\treturn this.output;\n\t\t\t}.bind(this)).\n\t\t\tthen(function(){\n\t\t\t\treturn this.hooks.serialize.trigger(this.output, this);\n\t\t\t}.bind(this)).\n\t\t\tthen(function(){\n\t\t\t\trendering.resolve(this.output);\n\t\t\t}.bind(this))\n\t\t\t.catch(function(error){\n\t\t\t\trendering.reject(error);\n\t\t\t});\n\n\t\treturn rendered;\n\t}\n\n\t/**\n\t * Find a string in a section\n\t * @param  {string} _query The query string to find\n\t * @return {object[]} A list of matches, with form {cfi, excerpt}\n\t */\n\tfind(_query){\n\t\tvar section = this;\n\t\tvar matches = [];\n\t\tvar query = _query.toLowerCase();\n\t\tvar find = function(node){\n\t\t\tvar text = node.textContent.toLowerCase();\n\t\t\tvar range = section.document.createRange();\n\t\t\tvar cfi;\n\t\t\tvar pos;\n\t\t\tvar last = -1;\n\t\t\tvar excerpt;\n\t\t\tvar limit = 150;\n\n\t\t\twhile (pos != -1) {\n\t\t\t\t// Search for the query\n\t\t\t\tpos = text.indexOf(query, last + 1);\n\n\t\t\t\tif (pos != -1) {\n\t\t\t\t\t// We found it! Generate a CFI\n\t\t\t\t\trange = section.document.createRange();\n\t\t\t\t\trange.setStart(node, pos);\n\t\t\t\t\trange.setEnd(node, pos + query.length);\n\n\t\t\t\t\tcfi = section.cfiFromRange(range);\n\n\t\t\t\t\t// Generate the excerpt\n\t\t\t\t\tif (node.textContent.length < limit) {\n\t\t\t\t\t\texcerpt = node.textContent;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\texcerpt = node.textContent.substring(pos - limit/2, pos + limit/2);\n\t\t\t\t\t\texcerpt = \"...\" + excerpt + \"...\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add the CFI to the matches list\n\t\t\t\t\tmatches.push({\n\t\t\t\t\t\tcfi: cfi,\n\t\t\t\t\t\texcerpt: excerpt\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlast = pos;\n\t\t\t}\n\t\t};\n\n\t\tsprint(section.document, function(node) {\n\t\t\tfind(node);\n\t\t});\n\n\t\treturn matches;\n\t};\n\n\n\t/**\n\t * Search a string in multiple sequential Element of the section. If the document.createTreeWalker api is missed(eg: IE8), use `find` as a fallback.\n\t * @param  {string} _query The query string to search\n\t * @param  {int} maxSeqEle The maximum number of Element that are combined for search, default value is 5.\n\t * @return {object[]} A list of matches, with form {cfi, excerpt}\n\t */\n\tsearch(_query , maxSeqEle = 5){\n\t\tif (typeof(document.createTreeWalker) == \"undefined\") {\n\t\t\treturn this.find(_query);\n\t\t}\n\t\tlet matches = [];\n\t\tconst excerptLimit = 150;\n\t\tconst section = this;\n\t\tconst query = _query.toLowerCase();\n\t\tconst search = function(nodeList){\n\t\t\tconst textWithCase =  nodeList.reduce((acc ,current)=>{\n\t\t\t\treturn acc + current.textContent;\n\t\t\t},\"\");\n\t\t\tconst text = textWithCase.toLowerCase();\n\t\t\tconst pos = text.indexOf(query);\n\t\t\tif (pos != -1){\n\t\t\t\tconst startNodeIndex = 0 , endPos = pos + query.length;\n\t\t\t\tlet endNodeIndex = 0 , l = 0;\n\t\t\t\tif (pos < nodeList[startNodeIndex].length){\n\t\t\t\t\tlet cfi;\n\t\t\t\t\twhile( endNodeIndex < nodeList.length - 1 ){\n\t\t\t\t\t\tl += nodeList[endNodeIndex].length;\n\t\t\t\t\t\tif ( endPos <= l){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tendNodeIndex += 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet startNode = nodeList[startNodeIndex] , endNode = nodeList[endNodeIndex];\n\t\t\t\t\tlet range = section.document.createRange();\n\t\t\t\t\trange.setStart(startNode,pos);\n\t\t\t\t\tlet beforeEndLengthCount =  nodeList.slice(0, endNodeIndex).reduce((acc,current)=>{return acc+current.textContent.length;},0) ;\n\t\t\t\t\trange.setEnd(endNode, beforeEndLengthCount > endPos ? endPos : endPos - beforeEndLengthCount );\n\t\t\t\t\tcfi = section.cfiFromRange(range);\n\n\t\t\t\t\tlet excerpt = nodeList.slice(0, endNodeIndex+1).reduce((acc,current)=>{return acc+current.textContent ;},\"\");\n\t\t\t\t\tif (excerpt.length > excerptLimit){\n\t\t\t\t\t\texcerpt = excerpt.substring(pos - excerptLimit/2, pos + excerptLimit/2);\n\t\t\t\t\t\texcerpt = \"...\" + excerpt + \"...\";\n\t\t\t\t\t}\n\t\t\t\t\tmatches.push({\n\t\t\t\t\t\tcfi: cfi,\n\t\t\t\t\t\texcerpt: excerpt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst treeWalker = document.createTreeWalker(section.document, NodeFilter.SHOW_TEXT, null, false);\n\t\tlet node , nodeList = [];\n\t\twhile (node = treeWalker.nextNode()) {\n\t\t\tnodeList.push(node);\n\t\t\tif (nodeList.length == maxSeqEle){\n\t\t\t\tsearch(nodeList.slice(0 , maxSeqEle));\n\t\t\t\tnodeList = nodeList.slice(1, maxSeqEle);\n\t\t\t}\n\t\t}\n\t\tif (nodeList.length > 0){\n\t\t\tsearch(nodeList);\n\t\t}\n\t\treturn matches;\n\t}\n\n\t/**\n\t* Reconciles the current chapters layout properties with\n\t* the global layout properties.\n\t* @param {object} globalLayout  The global layout settings object, chapter properties string\n\t* @return {object} layoutProperties Object with layout properties\n\t*/\n\treconcileLayoutSettings(globalLayout){\n\t\t//-- Get the global defaults\n\t\tvar settings = {\n\t\t\tlayout : globalLayout.layout,\n\t\t\tspread : globalLayout.spread,\n\t\t\torientation : globalLayout.orientation\n\t\t};\n\n\t\t//-- Get the chapter's display type\n\t\tthis.properties.forEach(function(prop){\n\t\t\tvar rendition = prop.replace(\"rendition:\", \"\");\n\t\t\tvar split = rendition.indexOf(\"-\");\n\t\t\tvar property, value;\n\n\t\t\tif(split != -1){\n\t\t\t\tproperty = rendition.slice(0, split);\n\t\t\t\tvalue = rendition.slice(split+1);\n\n\t\t\t\tsettings[property] = value;\n\t\t\t}\n\t\t});\n\t\treturn settings;\n\t}\n\n\t/**\n\t * Get a CFI from a Range in the Section\n\t * @param  {range} _range\n\t * @return {string} cfi an EpubCFI string\n\t */\n\tcfiFromRange(_range) {\n\t\treturn new EpubCFI(_range, this.cfiBase).toString();\n\t}\n\n\t/**\n\t * Get a CFI from an Element in the Section\n\t * @param  {element} el\n\t * @return {string} cfi an EpubCFI string\n\t */\n\tcfiFromElement(el) {\n\t\treturn new EpubCFI(el, this.cfiBase).toString();\n\t}\n\n\t/**\n\t * Unload the section document\n\t */\n\tunload() {\n\t\tthis.document = undefined;\n\t\tthis.contents = undefined;\n\t\tthis.output = undefined;\n\t}\n\n\tdestroy() {\n\t\tthis.unload();\n\t\tthis.hooks.serialize.clear();\n\t\tthis.hooks.content.clear();\n\n\t\tthis.hooks = undefined;\n\t\tthis.idref = undefined;\n\t\tthis.linear = undefined;\n\t\tthis.properties = undefined;\n\t\tthis.index = undefined;\n\t\tthis.href = undefined;\n\t\tthis.url = undefined;\n\t\tthis.next = undefined;\n\t\tthis.prev = undefined;\n\n\t\tthis.cfiBase = undefined;\n\t}\n}\n\nexport default Section;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}