{"ast":null,"code":"var _jsxFileName = \"/home/parallels/Downloads/react-epub-viewer-demo/src/react-viewer/modules/epubViewer/EpubViewer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Book } from 'epubjs';\n// style\nimport styles from '../../modules/epubViewer/styles';\n// types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/**\n * EpubViewer Module\n * @class\n * @param props\n * @param props.url Epub path\n * @param props.epubFileOptions Epub file option\n * @param props.epubOptions Epub viewer option\n * @param props.style Epub Wrapper style\n * @param props.location Epub CFI or href\n * @param props.bookChanged Run when book changed\n * @param props.rendtionChanged Run when rendition changed\n * @param props.pageChanged Run when page changed\n * @param props.tocChanged Run when toc changed\n * @param props.selectionChanged Run when selected\n * @param props.loadingView Loading Component\n * @param ref Viewer ref\n */\nconst EpubViewer = (_ref, ref) => {\n  _s();\n  let {\n    url,\n    epubFileOptions,\n    epubOptions,\n    style,\n    location,\n    bookChanged,\n    rendtionChanged,\n    pageChanged,\n    tocChanged,\n    selectionChanged,\n    loadingView\n  } = _ref;\n  // TODO Fix the ref type correctly instead 'any' type.\n  const viewerStyle = style ? {\n    ...styles,\n    ...style\n  } : styles;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [book, setBook] = useState(null);\n  const [rendition, setRendition] = useState(null);\n  const [update, setUpdate] = useState(false);\n  const currentCfi = useRef('');\n\n  /**\n   * Move page\n   * @method\n   * @param type direction\n   */\n  const movePage = useCallback(type => {\n    if (!rendition) return;\n    if (type === 'PREV') rendition.prev();else rendition.next();\n  }, [rendition]);\n\n  /**\n   * Move page by arrow key\n   * @method\n   * @param props Keyboard Event\n   * @param props.key\n   */\n  const handleKeyPress = useCallback(_ref2 => {\n    let {\n      key\n    } = _ref2;\n    key && key === 'ArrowLeft' && movePage('PREV');\n    key && key === 'ArrowRight' && movePage('NEXT');\n  }, [movePage]);\n\n  /**\n   * Run when location changed\n   * @method\n   * @param loc\n   * - Set location state\n   * - Run 'locationChanged()' through startCFI\n   */\n  const onLocationChange = useCallback(loc => {\n    const startCfi = loc && loc.start;\n    const endCfi = loc && loc.end;\n    const base = loc && loc.start.slice(8).split('!')[0];\n    if (!book) return;\n    const spineItem = book.spine.get(startCfi);\n    const navItem = book.navigation.get(spineItem.href);\n    const chapterName = navItem && navItem.label.trim();\n    const locations = book.locations;\n    const currentPage = locations.locationFromCfi(startCfi);\n    const totalPage = locations.total;\n    pageChanged && pageChanged({\n      chapterName,\n      currentPage,\n      totalPage,\n      startCfi,\n      endCfi,\n      base\n    });\n    currentCfi.current = startCfi;\n  }, [book, pageChanged]);\n\n  /**\n   * Highlight function\n   * @param cfiRange Selected CFIRange\n   * @param callback Highlight callback function when click it\n   * @param color Highlight color\n   */\n  const onHighlight = useCallback((cfiRange, callback, color) => {\n    if (!rendition) return;\n    rendition.annotations.remove(cfiRange, 'highlight');\n    rendition.annotations.highlight(cfiRange, {}, callback, 'epub-highlight', {\n      fill: color || '#fdf183'\n    });\n  }, [rendition]);\n\n  /**\n   * Highlight remove function\n   * @param cfiRange Selected CFIRange\n   */\n  const onRemoveHighlight = useCallback(cfiRange => {\n    if (!rendition) return;\n    rendition.annotations.remove(cfiRange, 'highlight');\n  }, [rendition]);\n\n  /**\n   * Register viewer control function\n   * @method\n   * - REF.CURRENT.prevPage() : Move prev page\n   * - REF.CURRENT.nextPage() : Move next page\n   * - REF.CURRENT.getCurrentCfi() : Get current CFI\n   * - REF.CURRENT.onHighlight(): Set highlight\n   * - REF.CURRENT.offHighlight(): Remove specific highliht\n   * - REF.CURRENT.seLocation(): Move to specific cfi or href\n   */\n  const registerGlobalFunc = useCallback(() => {\n    if (!ref.current) return;\n    if (movePage) {\n      ref.current.prevPage = () => movePage('PREV');\n      ref.current.nextPage = () => movePage('NEXT');\n    }\n    ref.current.getCurrentCfi = () => currentCfi.current;\n    if (onHighlight) {\n      ref.current.onHighlight = onHighlight;\n    }\n    if (onRemoveHighlight) {\n      ref.current.offHighlight = onRemoveHighlight;\n    }\n    if (rendition) {\n      ref.current.setLocation = location => rendition.display(location);\n    }\n  }, [ref, rendition, movePage, onHighlight, onRemoveHighlight]);\n\n  /** Ref Checker */\n  useEffect(() => {\n    if (!ref) {\n      throw new Error('[React-Epub-Viewer] Put a ref argument that has a ViewerRef type.');\n    }\n  }, [ref]);\n\n  /** Epub init options Changed */\n  useEffect(() => {\n    if (!url) return;\n    let mounted = true;\n    let book_ = null;\n    if (!mounted) return;\n    if (book_) {\n      book_.destroy();\n    }\n    book_ = new Book(url, epubFileOptions);\n    setBook(book_);\n    return () => {\n      mounted = false;\n    };\n  }, [url, epubFileOptions, setBook, setIsLoaded, update]);\n\n  /** Book Changed */\n  useEffect(() => {\n    if (!book) return;\n    if (bookChanged) bookChanged(book);\n    book.loaded.navigation.then(_ref3 => {\n      let {\n        toc\n      } = _ref3;\n      const toc_ = toc.map(t => ({\n        label: t.label,\n        href: t.href\n      }));\n      setIsLoaded(true);\n      if (tocChanged) tocChanged(toc_);\n    });\n    book.ready.then(function () {\n      if (!book) return;\n      const stored = localStorage.getItem(book.key() + '-locations');\n      if (stored) {\n        return book.locations.load(stored);\n      } else {\n        return book.locations.generate(1024);\n      }\n    }).then(() => {\n      if (!book) return;\n      localStorage.setItem(book.key() + '-locations', book.locations.save());\n    });\n  }, [book, bookChanged, tocChanged, update]);\n\n  /** Rendition Changed */\n  useEffect(() => {\n    if (!rendition) return;\n    if (rendtionChanged) rendtionChanged(rendition);\n  }, [rendition, rendtionChanged, update]);\n\n  /** Viewer Option Changed */\n  useEffect(() => {\n    let mounted = true;\n    if (!book) return;\n    const node = ref.current;\n    if (!node) return;\n    node.innerHTML = '';\n    book.ready.then(function () {\n      if (!mounted) return;\n      if (book.spine) {\n        var _book$rendition, _book$rendition$locat, _book$rendition$locat2;\n        const loc = (_book$rendition = book.rendition) === null || _book$rendition === void 0 ? void 0 : (_book$rendition$locat = _book$rendition.location) === null || _book$rendition$locat === void 0 ? void 0 : (_book$rendition$locat2 = _book$rendition$locat.start) === null || _book$rendition$locat2 === void 0 ? void 0 : _book$rendition$locat2.cfi;\n\n        // if (book.rendition) book.rendition.destroy();\n\n        const rendition_ = book.renderTo(node, {\n          width: '100%',\n          height: '100%',\n          ...epubOptions\n        });\n        setRendition(rendition_);\n        if (loc) {\n          rendition_.display(loc);\n        } else {\n          rendition_.display();\n        }\n      }\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [ref, book, epubOptions, style, setRendition, update]);\n\n  /** Location Changed */\n  useEffect(() => {\n    if (!ref.current || !location) return;\n    if (ref.current.setLocation) ref.current.setLocation(location);\n  }, [ref, location, update]);\n\n  /**\n   * Emit Viewer Event\n   * - Register move event\n   * - Register location changed event\n   * - Register selection event\n   */\n  /* eslint-disable */\n  useEffect(() => {\n    if (!rendition) return;\n\n    // Emit global control function\n    registerGlobalFunc();\n    document.addEventListener('keyup', handleKeyPress, false);\n    rendition.on('keyup', handleKeyPress);\n    rendition.on('locationChanged', onLocationChange);\n    selectionChanged && rendition.on('selected', selectionChanged);\n    return () => {\n      document.removeEventListener('keyup', handleKeyPress, false);\n      rendition.off('keyup', handleKeyPress);\n      rendition.off('locationChanged', onLocationChange);\n      selectionChanged && rendition.off('selected', selectionChanged);\n    };\n  }, [rendition, registerGlobalFunc, handleKeyPress, uodate]);\n  /* eslint-enable */\n\n  const openBook = e => {\n    book === null || book === void 0 ? void 0 : book.open(e.target.result, 'binary');\n    setUpdate(update => !update);\n  };\n  const changeShit = e => {\n    var _e$target;\n    var file = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files[0];\n    console.log(file, 'file');\n    if (window.FileReader) {\n      var reader = new FileReader();\n      reader.onload = openBook;\n      reader.readAsArrayBuffer(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: changeShit,\n      id: \"input\",\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 6\n    }, this), !isLoaded && loadingView, /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      style: viewerStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EpubViewer, \"qUVwvNo1iWMkd7iqbn/6+KTmDag=\");\n_c = EpubViewer;\nexport default _c2 = /*#__PURE__*/React.forwardRef(EpubViewer);\nvar _c, _c2;\n$RefreshReg$(_c, \"EpubViewer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Book","styles","EpubViewer","ref","url","epubFileOptions","epubOptions","style","location","bookChanged","rendtionChanged","pageChanged","tocChanged","selectionChanged","loadingView","viewerStyle","isLoaded","setIsLoaded","book","setBook","rendition","setRendition","update","setUpdate","currentCfi","movePage","type","prev","next","handleKeyPress","key","onLocationChange","loc","startCfi","start","endCfi","end","base","slice","split","spineItem","spine","get","navItem","navigation","href","chapterName","label","trim","locations","currentPage","locationFromCfi","totalPage","total","current","onHighlight","cfiRange","callback","color","annotations","remove","highlight","fill","onRemoveHighlight","registerGlobalFunc","prevPage","nextPage","getCurrentCfi","offHighlight","setLocation","display","Error","mounted","book_","destroy","loaded","then","toc","toc_","map","t","ready","stored","localStorage","getItem","load","generate","setItem","save","node","innerHTML","cfi","rendition_","renderTo","width","height","document","addEventListener","on","removeEventListener","off","uodate","openBook","e","open","target","result","changeShit","file","files","console","log","window","FileReader","reader","onload","readAsArrayBuffer","forwardRef"],"sources":["/home/parallels/Downloads/react-epub-viewer-demo/src/react-viewer/modules/epubViewer/EpubViewer.tsx"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  CSSProperties,\n} from 'react';\nimport { Book, Rendition } from 'epubjs';\n// style\nimport styles from '../../modules/epubViewer/styles';\n// types\nimport { EpubViewerProps, ViewerRef } from 'types';\nimport Toc from 'types/toc';\nimport Loc from 'types/loc';\n\n/**\n * EpubViewer Module\n * @class\n * @param props\n * @param props.url Epub path\n * @param props.epubFileOptions Epub file option\n * @param props.epubOptions Epub viewer option\n * @param props.style Epub Wrapper style\n * @param props.location Epub CFI or href\n * @param props.bookChanged Run when book changed\n * @param props.rendtionChanged Run when rendition changed\n * @param props.pageChanged Run when page changed\n * @param props.tocChanged Run when toc changed\n * @param props.selectionChanged Run when selected\n * @param props.loadingView Loading Component\n * @param ref Viewer ref\n */\nconst EpubViewer = (\n  {\n    url,\n    epubFileOptions,\n    epubOptions,\n    style,\n    location,\n    bookChanged,\n    rendtionChanged,\n    pageChanged,\n    tocChanged,\n    selectionChanged,\n    loadingView,\n  }: EpubViewerProps,\n  ref: React.RefObject<ViewerRef> | any,\n) => {\n  // TODO Fix the ref type correctly instead 'any' type.\n  const viewerStyle: CSSProperties = style ? { ...styles, ...style } : styles;\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [book, setBook] = useState<Book | null>(null);\n\n  const [rendition, setRendition] = useState<Rendition | null>(null);\n  const [update, setUpdate] = useState(false)\n\n  const currentCfi = useRef<string>('');\n\n  /**\n   * Move page\n   * @method\n   * @param type direction\n   */\n  const movePage = useCallback(\n    (type: 'PREV' | 'NEXT') => {\n      if (!rendition) return;\n      if (type === 'PREV') rendition.prev();\n      else rendition.next();\n    },\n    [rendition],\n  );\n\n  /**\n   * Move page by arrow key\n   * @method\n   * @param props Keyboard Event\n   * @param props.key\n   */\n  const handleKeyPress = useCallback(\n    ({ key }: any) => {\n      key && key === 'ArrowLeft' && movePage('PREV');\n      key && key === 'ArrowRight' && movePage('NEXT');\n    },\n    [movePage],\n  );\n\n  /**\n   * Run when location changed\n   * @method\n   * @param loc\n   * - Set location state\n   * - Run 'locationChanged()' through startCFI\n   */\n  const onLocationChange = useCallback(\n    (loc: Loc) => {\n      const startCfi = loc && loc.start;\n      const endCfi = loc && loc.end;\n      const base = loc && loc.start.slice(8).split('!')[0];\n\n      if (!book) return;\n\n      const spineItem = book.spine.get(startCfi);\n      const navItem = book.navigation.get(spineItem.href);\n      const chapterName = navItem && navItem.label.trim();\n\n      const locations: any = book.locations;\n      const currentPage = locations.locationFromCfi(startCfi);\n      const totalPage = locations.total;\n\n      pageChanged &&\n        pageChanged({\n          chapterName,\n          currentPage,\n          totalPage,\n          startCfi,\n          endCfi,\n          base,\n        });\n\n      currentCfi.current = startCfi;\n    },\n    [book, pageChanged],\n  );\n\n  /**\n   * Highlight function\n   * @param cfiRange Selected CFIRange\n   * @param callback Highlight callback function when click it\n   * @param color Highlight color\n   */\n  const onHighlight = useCallback(\n    (cfiRange: string, callback?: (e: any) => void, color?: string) => {\n      if (!rendition) return;\n\n      rendition.annotations.remove(cfiRange, 'highlight');\n      rendition.annotations.highlight(\n        cfiRange,\n        {},\n        callback,\n        'epub-highlight',\n        {\n          fill: color || '#fdf183',\n        },\n      );\n    },\n    [rendition],\n  );\n\n  /**\n   * Highlight remove function\n   * @param cfiRange Selected CFIRange\n   */\n  const onRemoveHighlight = useCallback(\n    (cfiRange: string) => {\n      if (!rendition) return;\n\n      rendition.annotations.remove(cfiRange, 'highlight');\n    },\n    [rendition],\n  );\n\n  /**\n   * Register viewer control function\n   * @method\n   * - REF.CURRENT.prevPage() : Move prev page\n   * - REF.CURRENT.nextPage() : Move next page\n   * - REF.CURRENT.getCurrentCfi() : Get current CFI\n   * - REF.CURRENT.onHighlight(): Set highlight\n   * - REF.CURRENT.offHighlight(): Remove specific highliht\n   * - REF.CURRENT.seLocation(): Move to specific cfi or href\n   */\n  const registerGlobalFunc = useCallback(() => {\n    if (!ref.current) return;\n    if (movePage) {\n      ref.current.prevPage = () => movePage('PREV');\n      ref.current.nextPage = () => movePage('NEXT');\n    }\n    ref.current.getCurrentCfi = () => currentCfi.current;\n    if (onHighlight) {\n      ref.current.onHighlight = onHighlight;\n    }\n    if (onRemoveHighlight) {\n      ref.current.offHighlight = onRemoveHighlight;\n    }\n    if (rendition) {\n      ref.current.setLocation = (location: string) =>\n        rendition.display(location);\n    }\n  }, [ref, rendition, movePage, onHighlight, onRemoveHighlight]);\n\n  /** Ref Checker */\n  useEffect(() => {\n    if (!ref) {\n      throw new Error(\n        '[React-Epub-Viewer] Put a ref argument that has a ViewerRef type.',\n      );\n    }\n  }, [ref]);\n\n  /** Epub init options Changed */\n  useEffect(() => {\n    if (!url) return;\n\n    let mounted: boolean = true;\n    let book_: Book | any = null;\n\n    if (!mounted) return;\n\n    if (book_) {\n      book_.destroy();\n    }\n\n    book_ = new Book(url, epubFileOptions);\n    setBook(book_);\n\n    return () => {\n      mounted = false;\n    };\n  }, [url, epubFileOptions, setBook, setIsLoaded, update]);\n\n  /** Book Changed */\n  useEffect(() => {\n    if (!book) return;\n\n    if (bookChanged) bookChanged(book);\n\n    book.loaded.navigation.then(({ toc }) => {\n      const toc_: Toc[] = toc.map(t => ({\n        label: t.label,\n        href: t.href,\n      }));\n\n      setIsLoaded(true);\n      if (tocChanged) tocChanged(toc_);\n    });\n\n    book.ready\n      .then(function () {\n        if (!book) return;\n\n        const stored = localStorage.getItem(book.key() + '-locations');\n        if (stored) {\n          return book.locations.load(stored);\n        } else {\n          return book.locations.generate(1024);\n        }\n      })\n      .then(() => {\n        if (!book) return;\n        localStorage.setItem(book.key() + '-locations', book.locations.save());\n      });\n  }, [book, bookChanged, tocChanged, update]);\n\n  /** Rendition Changed */\n  useEffect(() => {\n    if (!rendition) return;\n\n    if (rendtionChanged) rendtionChanged(rendition);\n  }, [rendition, rendtionChanged, update]);\n\n  /** Viewer Option Changed */\n  useEffect(() => {\n    let mounted = true;\n    if (!book) return;\n\n    const node = ref.current;\n    if (!node) return;\n    node.innerHTML = '';\n\n    book.ready.then(function () {\n      if (!mounted) return;\n\n      if (book.spine) {\n        const loc = book.rendition?.location?.start?.cfi;\n\n        // if (book.rendition) book.rendition.destroy();\n\n        const rendition_ = book.renderTo(node, {\n          width: '100%',\n          height: '100%',\n          ...epubOptions,\n        });\n        setRendition(rendition_);\n\n        if (loc) {\n          rendition_.display(loc);\n        } else {\n          rendition_.display();\n        }\n      }\n    });\n\n    return () => {\n      mounted = false;\n    };\n  }, [ref, book, epubOptions, style, setRendition, update]);\n\n  /** Location Changed */\n  useEffect(() => {\n    if (!ref.current || !location) return;\n    if (ref.current.setLocation) ref.current.setLocation(location);\n  }, [ref, location, update]);\n\n  /**\n   * Emit Viewer Event\n   * - Register move event\n   * - Register location changed event\n   * - Register selection event\n   */\n  /* eslint-disable */\n  useEffect(() => {\n    if (!rendition) return;\n\n    // Emit global control function\n    registerGlobalFunc();\n\n    document.addEventListener('keyup', handleKeyPress, false);\n    rendition.on('keyup', handleKeyPress);\n    rendition.on('locationChanged', onLocationChange);\n    selectionChanged && rendition.on('selected', selectionChanged);\n\n    return () => {\n      document.removeEventListener('keyup', handleKeyPress, false);\n      rendition.off('keyup', handleKeyPress);\n      rendition.off('locationChanged', onLocationChange);\n      selectionChanged && rendition.off('selected', selectionChanged);\n    };\n  }, [rendition, registerGlobalFunc, handleKeyPress, uodate]);\n  /* eslint-enable */\n\n  const openBook = (e: any) => {\n\n\tbook?.open(e.target.result, 'binary')\n  setUpdate((update) => !update)\n \n\n}\n\n\nconst changeShit = (e:any) =>{\n  var file = e?.target?.files[0];\n  console.log(file, 'file')\n  if (window.FileReader) {\n      var reader = new FileReader();\n      reader.onload = openBook;\n      reader.readAsArrayBuffer(file);\n  }\n\n}\n\n\n  return (\n    <>\n     <input onChange={changeShit} id='input' type='file' />\n      {!isLoaded && loadingView}\n      <div ref={ref} style={viewerStyle} />\n    </>\n  );\n};\n\nexport default React.forwardRef(EpubViewer);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}