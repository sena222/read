{"ast":null,"code":"import { defer } from \"./utils/core\";\nimport EpubCFI from \"./epubcfi\";\nimport Hook from \"./utils/hook\";\nimport { sprint } from \"./utils/core\";\nimport { replaceBase } from \"./utils/replacements\";\nimport Request from \"./utils/request\";\nimport { DOMParser as XMLDOMSerializer } from \"@xmldom/xmldom\";\n\n/**\n * Represents a Section of the Book\n *\n * In most books this is equivalent to a Chapter\n * @param {object} item  The spine item representing the section\n * @param {object} hooks hooks for serialize and content\n */\nclass Section {\n  constructor(item, hooks) {\n    this.idref = item.idref;\n    this.linear = item.linear === \"yes\";\n    this.properties = item.properties;\n    this.index = item.index;\n    this.href = item.href;\n    this.url = item.url;\n    this.canonical = item.canonical;\n    this.next = item.next;\n    this.prev = item.prev;\n    this.cfiBase = item.cfiBase;\n    if (hooks) {\n      this.hooks = hooks;\n    } else {\n      this.hooks = {};\n      this.hooks.serialize = new Hook(this);\n      this.hooks.content = new Hook(this);\n    }\n    this.document = undefined;\n    this.contents = undefined;\n    this.output = undefined;\n  }\n\n  /**\n   * Load the section from its url\n   * @param  {method} [_request] a request method to use for loading\n   * @return {document} a promise with the xml document\n   */\n  load(_request) {\n    var request = _request || this.request || Request;\n    var loading = new defer();\n    var loaded = loading.promise;\n    if (this.contents) {\n      loading.resolve(this.contents);\n    } else {\n      request(this.url).then(function (xml) {\n        // var directory = new Url(this.url).directory;\n\n        this.document = xml;\n        this.contents = xml.documentElement;\n        return this.hooks.content.trigger(this.document, this);\n      }.bind(this)).then(function () {\n        loading.resolve(this.contents);\n      }.bind(this)).catch(function (error) {\n        loading.reject(error);\n      });\n    }\n    return loaded;\n  }\n\n  /**\n   * Adds a base tag for resolving urls in the section\n   * @private\n   */\n  base() {\n    return replaceBase(this.document, this);\n  }\n\n  /**\n   * Render the contents of a section\n   * @param  {method} [_request] a request method to use for loading\n   * @return {string} output a serialized XML Document\n   */\n  render(_request) {\n    var rendering = new defer();\n    var rendered = rendering.promise;\n    this.output; // TODO: better way to return this from hooks?\n\n    this.load(_request).then(function (contents) {\n      var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n      var isIE = userAgent.indexOf('Trident') >= 0;\n      var Serializer;\n      if (typeof XMLSerializer === \"undefined\" || isIE) {\n        Serializer = XMLDOMSerializer;\n      } else {\n        Serializer = XMLSerializer;\n      }\n      var serializer = new Serializer();\n      this.output = serializer.serializeToString(contents);\n      return this.output;\n    }.bind(this)).then(function () {\n      return this.hooks.serialize.trigger(this.output, this);\n    }.bind(this)).then(function () {\n      rendering.resolve(this.output);\n    }.bind(this)).catch(function (error) {\n      rendering.reject(error);\n    });\n    return rendered;\n  }\n\n  /**\n   * Find a string in a section\n   * @param  {string} _query The query string to find\n   * @return {object[]} A list of matches, with form {cfi, excerpt}\n   */\n  find(_query) {\n    var section = this;\n    var matches = [];\n    var query = _query.toLowerCase();\n    var find = function (node) {\n      var text = node.textContent.toLowerCase();\n      var range = section.document.createRange();\n      var cfi;\n      var pos;\n      var last = -1;\n      var excerpt;\n      var limit = 150;\n      while (pos != -1) {\n        // Search for the query\n        pos = text.indexOf(query, last + 1);\n        if (pos != -1) {\n          // We found it! Generate a CFI\n          range = section.document.createRange();\n          range.setStart(node, pos);\n          range.setEnd(node, pos + query.length);\n          cfi = section.cfiFromRange(range);\n\n          // Generate the excerpt\n          if (node.textContent.length < limit) {\n            excerpt = node.textContent;\n          } else {\n            excerpt = node.textContent.substring(pos - limit / 2, pos + limit / 2);\n            excerpt = \"...\" + excerpt + \"...\";\n          }\n\n          // Add the CFI to the matches list\n          matches.push({\n            cfi: cfi,\n            excerpt: excerpt\n          });\n        }\n        last = pos;\n      }\n    };\n    sprint(section.document, function (node) {\n      find(node);\n    });\n    return matches;\n  }\n  /**\n   * Search a string in multiple sequential Element of the section. If the document.createTreeWalker api is missed(eg: IE8), use `find` as a fallback.\n   * @param  {string} _query The query string to search\n   * @param  {int} maxSeqEle The maximum number of Element that are combined for search, default value is 5.\n   * @return {object[]} A list of matches, with form {cfi, excerpt}\n   */\n  search(_query) {\n    let maxSeqEle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n    if (typeof document.createTreeWalker == \"undefined\") {\n      return this.find(_query);\n    }\n    let matches = [];\n    const excerptLimit = 150;\n    const section = this;\n    const query = _query.toLowerCase();\n    const search = function (nodeList) {\n      const textWithCase = nodeList.reduce((acc, current) => {\n        return acc + current.textContent;\n      }, \"\");\n      const text = textWithCase.toLowerCase();\n      const pos = text.indexOf(query);\n      if (pos != -1) {\n        const startNodeIndex = 0,\n          endPos = pos + query.length;\n        let endNodeIndex = 0,\n          l = 0;\n        if (pos < nodeList[startNodeIndex].length) {\n          let cfi;\n          while (endNodeIndex < nodeList.length - 1) {\n            l += nodeList[endNodeIndex].length;\n            if (endPos <= l) {\n              break;\n            }\n            endNodeIndex += 1;\n          }\n          let startNode = nodeList[startNodeIndex],\n            endNode = nodeList[endNodeIndex];\n          let range = section.document.createRange();\n          range.setStart(startNode, pos);\n          let beforeEndLengthCount = nodeList.slice(0, endNodeIndex).reduce((acc, current) => {\n            return acc + current.textContent.length;\n          }, 0);\n          range.setEnd(endNode, beforeEndLengthCount > endPos ? endPos : endPos - beforeEndLengthCount);\n          cfi = section.cfiFromRange(range);\n          let excerpt = nodeList.slice(0, endNodeIndex + 1).reduce((acc, current) => {\n            return acc + current.textContent;\n          }, \"\");\n          if (excerpt.length > excerptLimit) {\n            excerpt = excerpt.substring(pos - excerptLimit / 2, pos + excerptLimit / 2);\n            excerpt = \"...\" + excerpt + \"...\";\n          }\n          matches.push({\n            cfi: cfi,\n            excerpt: excerpt\n          });\n        }\n      }\n    };\n    const treeWalker = document.createTreeWalker(section.document, NodeFilter.SHOW_TEXT, null, false);\n    let node,\n      nodeList = [];\n    while (node = treeWalker.nextNode()) {\n      nodeList.push(node);\n      if (nodeList.length == maxSeqEle) {\n        search(nodeList.slice(0, maxSeqEle));\n        nodeList = nodeList.slice(1, maxSeqEle);\n      }\n    }\n    if (nodeList.length > 0) {\n      search(nodeList);\n    }\n    return matches;\n  }\n\n  /**\n  * Reconciles the current chapters layout properties with\n  * the global layout properties.\n  * @param {object} globalLayout  The global layout settings object, chapter properties string\n  * @return {object} layoutProperties Object with layout properties\n  */\n  reconcileLayoutSettings(globalLayout) {\n    //-- Get the global defaults\n    var settings = {\n      layout: globalLayout.layout,\n      spread: globalLayout.spread,\n      orientation: globalLayout.orientation\n    };\n\n    //-- Get the chapter's display type\n    this.properties.forEach(function (prop) {\n      var rendition = prop.replace(\"rendition:\", \"\");\n      var split = rendition.indexOf(\"-\");\n      var property, value;\n      if (split != -1) {\n        property = rendition.slice(0, split);\n        value = rendition.slice(split + 1);\n        settings[property] = value;\n      }\n    });\n    return settings;\n  }\n\n  /**\n   * Get a CFI from a Range in the Section\n   * @param  {range} _range\n   * @return {string} cfi an EpubCFI string\n   */\n  cfiFromRange(_range) {\n    return new EpubCFI(_range, this.cfiBase).toString();\n  }\n\n  /**\n   * Get a CFI from an Element in the Section\n   * @param  {element} el\n   * @return {string} cfi an EpubCFI string\n   */\n  cfiFromElement(el) {\n    return new EpubCFI(el, this.cfiBase).toString();\n  }\n\n  /**\n   * Unload the section document\n   */\n  unload() {\n    this.document = undefined;\n    this.contents = undefined;\n    this.output = undefined;\n  }\n  destroy() {\n    this.unload();\n    this.hooks.serialize.clear();\n    this.hooks.content.clear();\n    this.hooks = undefined;\n    this.idref = undefined;\n    this.linear = undefined;\n    this.properties = undefined;\n    this.index = undefined;\n    this.href = undefined;\n    this.url = undefined;\n    this.next = undefined;\n    this.prev = undefined;\n    this.cfiBase = undefined;\n  }\n}\nexport default Section;","map":{"version":3,"names":["defer","EpubCFI","Hook","sprint","replaceBase","Request","DOMParser","XMLDOMSerializer","Section","constructor","item","hooks","idref","linear","properties","index","href","url","canonical","next","prev","cfiBase","serialize","content","document","undefined","contents","output","load","_request","request","loading","loaded","promise","resolve","then","xml","documentElement","trigger","bind","catch","error","reject","base","render","rendering","rendered","userAgent","navigator","isIE","indexOf","Serializer","XMLSerializer","serializer","serializeToString","find","_query","section","matches","query","toLowerCase","node","text","textContent","range","createRange","cfi","pos","last","excerpt","limit","setStart","setEnd","length","cfiFromRange","substring","push","search","maxSeqEle","createTreeWalker","excerptLimit","nodeList","textWithCase","reduce","acc","current","startNodeIndex","endPos","endNodeIndex","l","startNode","endNode","beforeEndLengthCount","slice","treeWalker","NodeFilter","SHOW_TEXT","nextNode","reconcileLayoutSettings","globalLayout","settings","layout","spread","orientation","forEach","prop","rendition","replace","split","property","value","_range","toString","cfiFromElement","el","unload","destroy","clear"],"sources":["/home/parallels/Downloads/react-epub-viewer-demo/node_modules/epubjs/src/section.js"],"sourcesContent":["import { defer } from \"./utils/core\";\nimport EpubCFI from \"./epubcfi\";\nimport Hook from \"./utils/hook\";\nimport { sprint } from \"./utils/core\";\nimport { replaceBase } from \"./utils/replacements\";\nimport Request from \"./utils/request\";\nimport { DOMParser as XMLDOMSerializer } from \"@xmldom/xmldom\";\n\n/**\n * Represents a Section of the Book\n *\n * In most books this is equivalent to a Chapter\n * @param {object} item  The spine item representing the section\n * @param {object} hooks hooks for serialize and content\n */\nclass Section {\n\tconstructor(item, hooks){\n\t\tthis.idref = item.idref;\n\t\tthis.linear = item.linear === \"yes\";\n\t\tthis.properties = item.properties;\n\t\tthis.index = item.index;\n\t\tthis.href = item.href;\n\t\tthis.url = item.url;\n\t\tthis.canonical = item.canonical;\n\t\tthis.next = item.next;\n\t\tthis.prev = item.prev;\n\n\t\tthis.cfiBase = item.cfiBase;\n\n\t\tif (hooks) {\n\t\t\tthis.hooks = hooks;\n\t\t} else {\n\t\t\tthis.hooks = {};\n\t\t\tthis.hooks.serialize = new Hook(this);\n\t\t\tthis.hooks.content = new Hook(this);\n\t\t}\n\n\t\tthis.document = undefined;\n\t\tthis.contents = undefined;\n\t\tthis.output = undefined;\n\t}\n\n\t/**\n\t * Load the section from its url\n\t * @param  {method} [_request] a request method to use for loading\n\t * @return {document} a promise with the xml document\n\t */\n\tload(_request){\n\t\tvar request = _request || this.request || Request;\n\t\tvar loading = new defer();\n\t\tvar loaded = loading.promise;\n\n\t\tif(this.contents) {\n\t\t\tloading.resolve(this.contents);\n\t\t} else {\n\t\t\trequest(this.url)\n\t\t\t\t.then(function(xml){\n\t\t\t\t\t// var directory = new Url(this.url).directory;\n\n\t\t\t\t\tthis.document = xml;\n\t\t\t\t\tthis.contents = xml.documentElement;\n\n\t\t\t\t\treturn this.hooks.content.trigger(this.document, this);\n\t\t\t\t}.bind(this))\n\t\t\t\t.then(function(){\n\t\t\t\t\tloading.resolve(this.contents);\n\t\t\t\t}.bind(this))\n\t\t\t\t.catch(function(error){\n\t\t\t\t\tloading.reject(error);\n\t\t\t\t});\n\t\t}\n\n\t\treturn loaded;\n\t}\n\n\t/**\n\t * Adds a base tag for resolving urls in the section\n\t * @private\n\t */\n\tbase(){\n\t\treturn replaceBase(this.document, this);\n\t}\n\n\t/**\n\t * Render the contents of a section\n\t * @param  {method} [_request] a request method to use for loading\n\t * @return {string} output a serialized XML Document\n\t */\n\trender(_request){\n\t\tvar rendering = new defer();\n\t\tvar rendered = rendering.promise;\n\t\tthis.output; // TODO: better way to return this from hooks?\n\n\t\tthis.load(_request).\n\t\t\tthen(function(contents){\n\t\t\t\tvar userAgent = (typeof navigator !== 'undefined' && navigator.userAgent) || '';\n\t\t\t\tvar isIE = userAgent.indexOf('Trident') >= 0;\n\t\t\t\tvar Serializer;\n\t\t\t\tif (typeof XMLSerializer === \"undefined\" || isIE) {\n\t\t\t\t\tSerializer = XMLDOMSerializer;\n\t\t\t\t} else {\n\t\t\t\t\tSerializer = XMLSerializer;\n\t\t\t\t}\n\t\t\t\tvar serializer = new Serializer();\n\t\t\t\tthis.output = serializer.serializeToString(contents);\n\t\t\t\treturn this.output;\n\t\t\t}.bind(this)).\n\t\t\tthen(function(){\n\t\t\t\treturn this.hooks.serialize.trigger(this.output, this);\n\t\t\t}.bind(this)).\n\t\t\tthen(function(){\n\t\t\t\trendering.resolve(this.output);\n\t\t\t}.bind(this))\n\t\t\t.catch(function(error){\n\t\t\t\trendering.reject(error);\n\t\t\t});\n\n\t\treturn rendered;\n\t}\n\n\t/**\n\t * Find a string in a section\n\t * @param  {string} _query The query string to find\n\t * @return {object[]} A list of matches, with form {cfi, excerpt}\n\t */\n\tfind(_query){\n\t\tvar section = this;\n\t\tvar matches = [];\n\t\tvar query = _query.toLowerCase();\n\t\tvar find = function(node){\n\t\t\tvar text = node.textContent.toLowerCase();\n\t\t\tvar range = section.document.createRange();\n\t\t\tvar cfi;\n\t\t\tvar pos;\n\t\t\tvar last = -1;\n\t\t\tvar excerpt;\n\t\t\tvar limit = 150;\n\n\t\t\twhile (pos != -1) {\n\t\t\t\t// Search for the query\n\t\t\t\tpos = text.indexOf(query, last + 1);\n\n\t\t\t\tif (pos != -1) {\n\t\t\t\t\t// We found it! Generate a CFI\n\t\t\t\t\trange = section.document.createRange();\n\t\t\t\t\trange.setStart(node, pos);\n\t\t\t\t\trange.setEnd(node, pos + query.length);\n\n\t\t\t\t\tcfi = section.cfiFromRange(range);\n\n\t\t\t\t\t// Generate the excerpt\n\t\t\t\t\tif (node.textContent.length < limit) {\n\t\t\t\t\t\texcerpt = node.textContent;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\texcerpt = node.textContent.substring(pos - limit/2, pos + limit/2);\n\t\t\t\t\t\texcerpt = \"...\" + excerpt + \"...\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add the CFI to the matches list\n\t\t\t\t\tmatches.push({\n\t\t\t\t\t\tcfi: cfi,\n\t\t\t\t\t\texcerpt: excerpt\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlast = pos;\n\t\t\t}\n\t\t};\n\n\t\tsprint(section.document, function(node) {\n\t\t\tfind(node);\n\t\t});\n\n\t\treturn matches;\n\t};\n\n\n\t/**\n\t * Search a string in multiple sequential Element of the section. If the document.createTreeWalker api is missed(eg: IE8), use `find` as a fallback.\n\t * @param  {string} _query The query string to search\n\t * @param  {int} maxSeqEle The maximum number of Element that are combined for search, default value is 5.\n\t * @return {object[]} A list of matches, with form {cfi, excerpt}\n\t */\n\tsearch(_query , maxSeqEle = 5){\n\t\tif (typeof(document.createTreeWalker) == \"undefined\") {\n\t\t\treturn this.find(_query);\n\t\t}\n\t\tlet matches = [];\n\t\tconst excerptLimit = 150;\n\t\tconst section = this;\n\t\tconst query = _query.toLowerCase();\n\t\tconst search = function(nodeList){\n\t\t\tconst textWithCase =  nodeList.reduce((acc ,current)=>{\n\t\t\t\treturn acc + current.textContent;\n\t\t\t},\"\");\n\t\t\tconst text = textWithCase.toLowerCase();\n\t\t\tconst pos = text.indexOf(query);\n\t\t\tif (pos != -1){\n\t\t\t\tconst startNodeIndex = 0 , endPos = pos + query.length;\n\t\t\t\tlet endNodeIndex = 0 , l = 0;\n\t\t\t\tif (pos < nodeList[startNodeIndex].length){\n\t\t\t\t\tlet cfi;\n\t\t\t\t\twhile( endNodeIndex < nodeList.length - 1 ){\n\t\t\t\t\t\tl += nodeList[endNodeIndex].length;\n\t\t\t\t\t\tif ( endPos <= l){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tendNodeIndex += 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet startNode = nodeList[startNodeIndex] , endNode = nodeList[endNodeIndex];\n\t\t\t\t\tlet range = section.document.createRange();\n\t\t\t\t\trange.setStart(startNode,pos);\n\t\t\t\t\tlet beforeEndLengthCount =  nodeList.slice(0, endNodeIndex).reduce((acc,current)=>{return acc+current.textContent.length;},0) ;\n\t\t\t\t\trange.setEnd(endNode, beforeEndLengthCount > endPos ? endPos : endPos - beforeEndLengthCount );\n\t\t\t\t\tcfi = section.cfiFromRange(range);\n\n\t\t\t\t\tlet excerpt = nodeList.slice(0, endNodeIndex+1).reduce((acc,current)=>{return acc+current.textContent ;},\"\");\n\t\t\t\t\tif (excerpt.length > excerptLimit){\n\t\t\t\t\t\texcerpt = excerpt.substring(pos - excerptLimit/2, pos + excerptLimit/2);\n\t\t\t\t\t\texcerpt = \"...\" + excerpt + \"...\";\n\t\t\t\t\t}\n\t\t\t\t\tmatches.push({\n\t\t\t\t\t\tcfi: cfi,\n\t\t\t\t\t\texcerpt: excerpt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst treeWalker = document.createTreeWalker(section.document, NodeFilter.SHOW_TEXT, null, false);\n\t\tlet node , nodeList = [];\n\t\twhile (node = treeWalker.nextNode()) {\n\t\t\tnodeList.push(node);\n\t\t\tif (nodeList.length == maxSeqEle){\n\t\t\t\tsearch(nodeList.slice(0 , maxSeqEle));\n\t\t\t\tnodeList = nodeList.slice(1, maxSeqEle);\n\t\t\t}\n\t\t}\n\t\tif (nodeList.length > 0){\n\t\t\tsearch(nodeList);\n\t\t}\n\t\treturn matches;\n\t}\n\n\t/**\n\t* Reconciles the current chapters layout properties with\n\t* the global layout properties.\n\t* @param {object} globalLayout  The global layout settings object, chapter properties string\n\t* @return {object} layoutProperties Object with layout properties\n\t*/\n\treconcileLayoutSettings(globalLayout){\n\t\t//-- Get the global defaults\n\t\tvar settings = {\n\t\t\tlayout : globalLayout.layout,\n\t\t\tspread : globalLayout.spread,\n\t\t\torientation : globalLayout.orientation\n\t\t};\n\n\t\t//-- Get the chapter's display type\n\t\tthis.properties.forEach(function(prop){\n\t\t\tvar rendition = prop.replace(\"rendition:\", \"\");\n\t\t\tvar split = rendition.indexOf(\"-\");\n\t\t\tvar property, value;\n\n\t\t\tif(split != -1){\n\t\t\t\tproperty = rendition.slice(0, split);\n\t\t\t\tvalue = rendition.slice(split+1);\n\n\t\t\t\tsettings[property] = value;\n\t\t\t}\n\t\t});\n\t\treturn settings;\n\t}\n\n\t/**\n\t * Get a CFI from a Range in the Section\n\t * @param  {range} _range\n\t * @return {string} cfi an EpubCFI string\n\t */\n\tcfiFromRange(_range) {\n\t\treturn new EpubCFI(_range, this.cfiBase).toString();\n\t}\n\n\t/**\n\t * Get a CFI from an Element in the Section\n\t * @param  {element} el\n\t * @return {string} cfi an EpubCFI string\n\t */\n\tcfiFromElement(el) {\n\t\treturn new EpubCFI(el, this.cfiBase).toString();\n\t}\n\n\t/**\n\t * Unload the section document\n\t */\n\tunload() {\n\t\tthis.document = undefined;\n\t\tthis.contents = undefined;\n\t\tthis.output = undefined;\n\t}\n\n\tdestroy() {\n\t\tthis.unload();\n\t\tthis.hooks.serialize.clear();\n\t\tthis.hooks.content.clear();\n\n\t\tthis.hooks = undefined;\n\t\tthis.idref = undefined;\n\t\tthis.linear = undefined;\n\t\tthis.properties = undefined;\n\t\tthis.index = undefined;\n\t\tthis.href = undefined;\n\t\tthis.url = undefined;\n\t\tthis.next = undefined;\n\t\tthis.prev = undefined;\n\n\t\tthis.cfiBase = undefined;\n\t}\n}\n\nexport default Section;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}