{"ast":null,"code":"import { extend } from \"./utils/core\";\nimport { EVENTS } from \"./utils/constants\";\nimport EventEmitter from \"event-emitter\";\n\n/**\n * Figures out the CSS values to apply for a layout\n * @class\n * @param {object} settings\n * @param {string} [settings.layout='reflowable']\n * @param {string} [settings.spread]\n * @param {number} [settings.minSpreadWidth=800]\n * @param {boolean} [settings.evenSpreads=false]\n */\nclass Layout {\n  constructor(settings) {\n    this.settings = settings;\n    this.name = settings.layout || \"reflowable\";\n    this._spread = settings.spread === \"none\" ? false : true;\n    this._minSpreadWidth = settings.minSpreadWidth || 800;\n    this._evenSpreads = settings.evenSpreads || false;\n    if (settings.flow === \"scrolled\" || settings.flow === \"scrolled-continuous\" || settings.flow === \"scrolled-doc\") {\n      this._flow = \"scrolled\";\n    } else {\n      this._flow = \"paginated\";\n    }\n    this.width = 0;\n    this.height = 0;\n    this.spreadWidth = 0;\n    this.delta = 0;\n    this.columnWidth = 0;\n    this.gap = 0;\n    this.divisor = 1;\n    this.props = {\n      name: this.name,\n      spread: this._spread,\n      flow: this._flow,\n      width: 0,\n      height: 0,\n      spreadWidth: 0,\n      delta: 0,\n      columnWidth: 0,\n      gap: 0,\n      divisor: 1\n    };\n  }\n\n  /**\n   * Switch the flow between paginated and scrolled\n   * @param  {string} flow paginated | scrolled\n   * @return {string} simplified flow\n   */\n  flow(flow) {\n    if (typeof flow != \"undefined\") {\n      if (flow === \"scrolled\" || flow === \"scrolled-continuous\" || flow === \"scrolled-doc\") {\n        this._flow = \"scrolled\";\n      } else {\n        this._flow = \"paginated\";\n      }\n      // this.props.flow = this._flow;\n      this.update({\n        flow: this._flow\n      });\n    }\n    return this._flow;\n  }\n\n  /**\n   * Switch between using spreads or not, and set the\n   * width at which they switch to single.\n   * @param  {string} spread \"none\" | \"always\" | \"auto\"\n   * @param  {number} min integer in pixels\n   * @return {boolean} spread true | false\n   */\n  spread(spread, min) {\n    if (spread) {\n      this._spread = spread === \"none\" ? false : true;\n      // this.props.spread = this._spread;\n      this.update({\n        spread: this._spread\n      });\n    }\n    if (min >= 0) {\n      this._minSpreadWidth = min;\n    }\n    return this._spread;\n  }\n\n  /**\n   * Calculate the dimensions of the pagination\n   * @param  {number} _width  width of the rendering\n   * @param  {number} _height height of the rendering\n   * @param  {number} _gap    width of the gap between columns\n   */\n  calculate(_width, _height, _gap) {\n    var divisor = 1;\n    var gap = _gap || 0;\n\n    //-- Check the width and create even width columns\n    // var fullWidth = Math.floor(_width);\n    var width = _width;\n    var height = _height;\n    var section = Math.floor(width / 12);\n    var columnWidth;\n    var spreadWidth;\n    var pageWidth;\n    var delta;\n    if (this._spread && width >= this._minSpreadWidth) {\n      divisor = 2;\n    } else {\n      divisor = 1;\n    }\n    if (this.name === \"reflowable\" && this._flow === \"paginated\" && !(_gap >= 0)) {\n      gap = section % 2 === 0 ? section : section - 1;\n    }\n    if (this.name === \"pre-paginated\") {\n      gap = 0;\n    }\n\n    //-- Double Page\n    if (divisor > 1) {\n      // width = width - gap;\n      // columnWidth = (width - gap) / divisor;\n      // gap = gap / divisor;\n      columnWidth = width / divisor - gap;\n      pageWidth = columnWidth + gap;\n    } else {\n      columnWidth = width;\n      pageWidth = width;\n    }\n    if (this.name === \"pre-paginated\" && divisor > 1) {\n      width = columnWidth;\n    }\n    spreadWidth = columnWidth * divisor + gap;\n    delta = width;\n    this.width = width;\n    this.height = height;\n    this.spreadWidth = spreadWidth;\n    this.pageWidth = pageWidth;\n    this.delta = delta;\n    this.columnWidth = columnWidth;\n    this.gap = gap;\n    this.divisor = divisor;\n\n    // this.props.width = width;\n    // this.props.height = _height;\n    // this.props.spreadWidth = spreadWidth;\n    // this.props.pageWidth = pageWidth;\n    // this.props.delta = delta;\n    //\n    // this.props.columnWidth = colWidth;\n    // this.props.gap = gap;\n    // this.props.divisor = divisor;\n\n    this.update({\n      width,\n      height,\n      spreadWidth,\n      pageWidth,\n      delta,\n      columnWidth,\n      gap,\n      divisor\n    });\n  }\n\n  /**\n   * Apply Css to a Document\n   * @param  {Contents} contents\n   * @return {Promise}\n   */\n  format(contents, section, axis) {\n    var formating;\n    if (this.name === \"pre-paginated\") {\n      formating = contents.fit(this.columnWidth, this.height, section);\n    } else if (this._flow === \"paginated\") {\n      formating = contents.columns(this.width, this.height, this.columnWidth, this.gap, this.settings.direction);\n    } else if (axis && axis === \"horizontal\") {\n      formating = contents.size(null, this.height);\n    } else {\n      formating = contents.size(this.width, null);\n    }\n    return formating; // might be a promise in some View Managers\n  }\n\n  /**\n   * Count number of pages\n   * @param  {number} totalLength\n   * @param  {number} pageLength\n   * @return {{spreads: Number, pages: Number}}\n   */\n  count(totalLength, pageLength) {\n    let spreads, pages;\n    if (this.name === \"pre-paginated\") {\n      spreads = 1;\n      pages = 1;\n    } else if (this._flow === \"paginated\") {\n      pageLength = pageLength || this.delta;\n      spreads = Math.ceil(totalLength / pageLength);\n      pages = spreads * this.divisor;\n    } else {\n      // scrolled\n      pageLength = pageLength || this.height;\n      spreads = Math.ceil(totalLength / pageLength);\n      pages = spreads;\n    }\n    return {\n      spreads,\n      pages\n    };\n  }\n\n  /**\n   * Update props that have changed\n   * @private\n   * @param  {object} props\n   */\n  update(props) {\n    // Remove props that haven't changed\n    Object.keys(props).forEach(propName => {\n      if (this.props[propName] === props[propName]) {\n        delete props[propName];\n      }\n    });\n    if (Object.keys(props).length > 0) {\n      let newProps = extend(this.props, props);\n      this.emit(EVENTS.LAYOUT.UPDATED, newProps, props);\n    }\n  }\n}\nEventEmitter(Layout.prototype);\nexport default Layout;","map":{"version":3,"names":["extend","EVENTS","EventEmitter","Layout","constructor","settings","name","layout","_spread","spread","_minSpreadWidth","minSpreadWidth","_evenSpreads","evenSpreads","flow","_flow","width","height","spreadWidth","delta","columnWidth","gap","divisor","props","update","min","calculate","_width","_height","_gap","section","Math","floor","pageWidth","format","contents","axis","formating","fit","columns","direction","size","count","totalLength","pageLength","spreads","pages","ceil","Object","keys","forEach","propName","length","newProps","emit","LAYOUT","UPDATED","prototype"],"sources":["/home/parallels/Downloads/react-epub-viewer-demo/node_modules/epubjs/src/layout.js"],"sourcesContent":["import { extend } from \"./utils/core\";\nimport { EVENTS } from \"./utils/constants\";\nimport EventEmitter from \"event-emitter\";\n\n/**\n * Figures out the CSS values to apply for a layout\n * @class\n * @param {object} settings\n * @param {string} [settings.layout='reflowable']\n * @param {string} [settings.spread]\n * @param {number} [settings.minSpreadWidth=800]\n * @param {boolean} [settings.evenSpreads=false]\n */\nclass Layout {\n\tconstructor(settings) {\n\t\tthis.settings = settings;\n\t\tthis.name = settings.layout || \"reflowable\";\n\t\tthis._spread = (settings.spread === \"none\") ? false : true;\n\t\tthis._minSpreadWidth = settings.minSpreadWidth || 800;\n\t\tthis._evenSpreads = settings.evenSpreads || false;\n\n\t\tif (settings.flow === \"scrolled\" ||\n\t\t\t\tsettings.flow === \"scrolled-continuous\" ||\n\t\t\t\tsettings.flow === \"scrolled-doc\") {\n\t\t\tthis._flow = \"scrolled\";\n\t\t} else {\n\t\t\tthis._flow = \"paginated\";\n\t\t}\n\n\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.spreadWidth = 0;\n\t\tthis.delta = 0;\n\n\t\tthis.columnWidth = 0;\n\t\tthis.gap = 0;\n\t\tthis.divisor = 1;\n\n\t\tthis.props = {\n\t\t\tname: this.name,\n\t\t\tspread: this._spread,\n\t\t\tflow: this._flow,\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tspreadWidth: 0,\n\t\t\tdelta: 0,\n\t\t\tcolumnWidth: 0,\n\t\t\tgap: 0,\n\t\t\tdivisor: 1\n\t\t};\n\n\t}\n\n\t/**\n\t * Switch the flow between paginated and scrolled\n\t * @param  {string} flow paginated | scrolled\n\t * @return {string} simplified flow\n\t */\n\tflow(flow) {\n\t\tif (typeof(flow) != \"undefined\") {\n\t\t\tif (flow === \"scrolled\" ||\n\t\t\t\t\tflow === \"scrolled-continuous\" ||\n\t\t\t\t\tflow === \"scrolled-doc\") {\n\t\t\t\tthis._flow = \"scrolled\";\n\t\t\t} else {\n\t\t\t\tthis._flow = \"paginated\";\n\t\t\t}\n\t\t\t// this.props.flow = this._flow;\n\t\t\tthis.update({flow: this._flow});\n\t\t}\n\t\treturn this._flow;\n\t}\n\n\t/**\n\t * Switch between using spreads or not, and set the\n\t * width at which they switch to single.\n\t * @param  {string} spread \"none\" | \"always\" | \"auto\"\n\t * @param  {number} min integer in pixels\n\t * @return {boolean} spread true | false\n\t */\n\tspread(spread, min) {\n\n\t\tif (spread) {\n\t\t\tthis._spread = (spread === \"none\") ? false : true;\n\t\t\t// this.props.spread = this._spread;\n\t\t\tthis.update({spread: this._spread});\n\t\t}\n\n\t\tif (min >= 0) {\n\t\t\tthis._minSpreadWidth = min;\n\t\t}\n\n\t\treturn this._spread;\n\t}\n\n\t/**\n\t * Calculate the dimensions of the pagination\n\t * @param  {number} _width  width of the rendering\n\t * @param  {number} _height height of the rendering\n\t * @param  {number} _gap    width of the gap between columns\n\t */\n\tcalculate(_width, _height, _gap){\n\n\t\tvar divisor = 1;\n\t\tvar gap = _gap || 0;\n\n\t\t//-- Check the width and create even width columns\n\t\t// var fullWidth = Math.floor(_width);\n\t\tvar width = _width;\n\t\tvar height = _height;\n\n\t\tvar section = Math.floor(width / 12);\n\n\t\tvar columnWidth;\n\t\tvar spreadWidth;\n\t\tvar pageWidth;\n\t\tvar delta;\n\n\t\tif (this._spread && width >= this._minSpreadWidth) {\n\t\t\tdivisor = 2;\n\t\t} else {\n\t\t\tdivisor = 1;\n\t\t}\n\n\t\tif (this.name === \"reflowable\" && this._flow === \"paginated\" && !(_gap >= 0)) {\n\t\t\tgap = ((section % 2 === 0) ? section : section - 1);\n\t\t}\n\n\t\tif (this.name === \"pre-paginated\" ) {\n\t\t\tgap = 0;\n\t\t}\n\n\t\t//-- Double Page\n\t\tif(divisor > 1) {\n\t\t\t// width = width - gap;\n\t\t\t// columnWidth = (width - gap) / divisor;\n\t\t\t// gap = gap / divisor;\n\t\t\tcolumnWidth = (width / divisor) - gap;\n\t\t\tpageWidth = columnWidth + gap;\n\t\t} else {\n\t\t\tcolumnWidth = width;\n\t\t\tpageWidth = width;\n\t\t}\n\n\t\tif (this.name === \"pre-paginated\" && divisor > 1) {\n\t\t\twidth = columnWidth;\n\t\t}\n\n\t\tspreadWidth = (columnWidth * divisor) + gap;\n\n\t\tdelta = width;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.spreadWidth = spreadWidth;\n\t\tthis.pageWidth = pageWidth;\n\t\tthis.delta = delta;\n\n\t\tthis.columnWidth = columnWidth;\n\t\tthis.gap = gap;\n\t\tthis.divisor = divisor;\n\n\t\t// this.props.width = width;\n\t\t// this.props.height = _height;\n\t\t// this.props.spreadWidth = spreadWidth;\n\t\t// this.props.pageWidth = pageWidth;\n\t\t// this.props.delta = delta;\n\t\t//\n\t\t// this.props.columnWidth = colWidth;\n\t\t// this.props.gap = gap;\n\t\t// this.props.divisor = divisor;\n\n\t\tthis.update({\n\t\t\twidth,\n\t\t\theight,\n\t\t\tspreadWidth,\n\t\t\tpageWidth,\n\t\t\tdelta,\n\t\t\tcolumnWidth,\n\t\t\tgap,\n\t\t\tdivisor\n\t\t});\n\n\t}\n\n\t/**\n\t * Apply Css to a Document\n\t * @param  {Contents} contents\n\t * @return {Promise}\n\t */\n\tformat(contents, section, axis){\n\t\tvar formating;\n\n\t\tif (this.name === \"pre-paginated\") {\n\t\t\tformating = contents.fit(this.columnWidth, this.height, section);\n\t\t} else if (this._flow === \"paginated\") {\n\t\t\tformating = contents.columns(this.width, this.height, this.columnWidth, this.gap, this.settings.direction);\n\t\t} else if (axis && axis === \"horizontal\") {\n\t\t\tformating = contents.size(null, this.height);\n\t\t} else {\n\t\t\tformating = contents.size(this.width, null);\t\t\t\t\n\t\t}\n\n\t\treturn formating; // might be a promise in some View Managers\n\t}\n\n\t/**\n\t * Count number of pages\n\t * @param  {number} totalLength\n\t * @param  {number} pageLength\n\t * @return {{spreads: Number, pages: Number}}\n\t */\n\tcount(totalLength, pageLength) {\n\n\t\tlet spreads, pages;\n\n\t\tif (this.name === \"pre-paginated\") {\n\t\t\tspreads = 1;\n\t\t\tpages = 1;\n\t\t} else if (this._flow === \"paginated\") {\n\t\t\tpageLength = pageLength || this.delta;\n\t\t\tspreads = Math.ceil( totalLength / pageLength);\n\t\t\tpages = spreads * this.divisor;\n\t\t} else { // scrolled\n\t\t\tpageLength = pageLength || this.height;\n\t\t\tspreads = Math.ceil( totalLength / pageLength);\n\t\t\tpages = spreads;\n\t\t}\n\n\t\treturn {\n\t\t\tspreads,\n\t\t\tpages\n\t\t};\n\n\t}\n\n\t/**\n\t * Update props that have changed\n\t * @private\n\t * @param  {object} props\n\t */\n\tupdate(props) {\n\t\t// Remove props that haven't changed\n\t\tObject.keys(props).forEach((propName) => {\n\t\t\tif (this.props[propName] === props[propName]) {\n\t\t\t\tdelete props[propName];\n\t\t\t}\n\t\t});\n\n\t\tif(Object.keys(props).length > 0) {\n\t\t\tlet newProps = extend(this.props, props);\n\t\t\tthis.emit(EVENTS.LAYOUT.UPDATED, newProps, props);\n\t\t}\n\t}\n}\n\nEventEmitter(Layout.prototype);\n\nexport default Layout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}