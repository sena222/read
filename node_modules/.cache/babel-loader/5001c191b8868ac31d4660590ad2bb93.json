{"ast":null,"code":"import _classCallCheck from \"/home/parallels/Downloads/read/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/parallels/Downloads/read/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { qs, qsa } from \"./utils/core\";\n\n/**\n * Open DisplayOptions Format Parser\n * @class\n * @param {document} displayOptionsDocument XML\n */\nvar DisplayOptions = /*#__PURE__*/function () {\n  function DisplayOptions(displayOptionsDocument) {\n    _classCallCheck(this, DisplayOptions);\n    this.interactive = \"\";\n    this.fixedLayout = \"\";\n    this.openToSpread = \"\";\n    this.orientationLock = \"\";\n    if (displayOptionsDocument) {\n      this.parse(displayOptionsDocument);\n    }\n  }\n\n  /**\n   * Parse XML\n   * @param  {document} displayOptionsDocument XML\n   * @return {DisplayOptions} self\n   */\n  _createClass(DisplayOptions, [{\n    key: \"parse\",\n    value: function parse(displayOptionsDocument) {\n      var _this = this;\n      if (!displayOptionsDocument) {\n        return this;\n      }\n      var displayOptionsNode = qs(displayOptionsDocument, \"display_options\");\n      if (!displayOptionsNode) {\n        return this;\n      }\n      var options = qsa(displayOptionsNode, \"option\");\n      options.forEach(function (el) {\n        var value = \"\";\n        if (el.childNodes.length) {\n          value = el.childNodes[0].nodeValue;\n        }\n        switch (el.attributes.name.value) {\n          case \"interactive\":\n            _this.interactive = value;\n            break;\n          case \"fixed-layout\":\n            _this.fixedLayout = value;\n            break;\n          case \"open-to-spread\":\n            _this.openToSpread = value;\n            break;\n          case \"orientation-lock\":\n            _this.orientationLock = value;\n            break;\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.interactive = undefined;\n      this.fixedLayout = undefined;\n      this.openToSpread = undefined;\n      this.orientationLock = undefined;\n    }\n  }]);\n  return DisplayOptions;\n}();\nexport default DisplayOptions;","map":{"version":3,"names":["qs","qsa","DisplayOptions","displayOptionsDocument","interactive","fixedLayout","openToSpread","orientationLock","parse","displayOptionsNode","options","forEach","el","value","childNodes","length","nodeValue","attributes","name","undefined"],"sources":["/home/parallels/Downloads/read/node_modules/epubjs/src/displayoptions.js"],"sourcesContent":["import {qs, qsa } from \"./utils/core\";\n\n/**\n * Open DisplayOptions Format Parser\n * @class\n * @param {document} displayOptionsDocument XML\n */\nclass DisplayOptions {\n\tconstructor(displayOptionsDocument) {\n\t\tthis.interactive = \"\";\n\t\tthis.fixedLayout = \"\";\n\t\tthis.openToSpread = \"\";\n\t\tthis.orientationLock = \"\";\n\n\t\tif (displayOptionsDocument) {\n\t\t\tthis.parse(displayOptionsDocument);\n\t\t}\n\t}\n\n\t/**\n\t * Parse XML\n\t * @param  {document} displayOptionsDocument XML\n\t * @return {DisplayOptions} self\n\t */\n\tparse(displayOptionsDocument) {\n\t\tif(!displayOptionsDocument) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst displayOptionsNode = qs(displayOptionsDocument, \"display_options\");\n\t\tif(!displayOptionsNode) {\n\t\t\treturn this;\n\t\t} \n\n\t\tconst options = qsa(displayOptionsNode, \"option\");\n\t\toptions.forEach((el) => {\n\t\t\tlet value = \"\";\n\n\t\t\tif (el.childNodes.length) {\n\t\t\t\tvalue = el.childNodes[0].nodeValue;\n\t\t\t}\n\n\t\t\tswitch (el.attributes.name.value) {\n\t\t\t    case \"interactive\":\n\t\t\t        this.interactive = value;\n\t\t\t        break;\n\t\t\t    case \"fixed-layout\":\n\t\t\t        this.fixedLayout = value;\n\t\t\t        break;\n\t\t\t    case \"open-to-spread\":\n\t\t\t        this.openToSpread = value;\n\t\t\t        break;\n\t\t\t    case \"orientation-lock\":\n\t\t\t        this.orientationLock = value;\n\t\t\t        break;\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tdestroy() {\n\t\tthis.interactive = undefined;\n\t\tthis.fixedLayout = undefined;\n\t\tthis.openToSpread = undefined;\n\t\tthis.orientationLock = undefined;\n\t}\n}\n\nexport default DisplayOptions;\n"],"mappings":";;AAAA,SAAQA,EAAE,EAAEC,GAAG,QAAQ,cAAc;;AAErC;AACA;AACA;AACA;AACA;AAJA,IAKMC,cAAc;EACnB,wBAAYC,sBAAsB,EAAE;IAAA;IACnC,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,eAAe,GAAG,EAAE;IAEzB,IAAIJ,sBAAsB,EAAE;MAC3B,IAAI,CAACK,KAAK,CAACL,sBAAsB,CAAC;IACnC;EACD;;EAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,eAAMA,sBAAsB,EAAE;MAAA;MAC7B,IAAG,CAACA,sBAAsB,EAAE;QAC3B,OAAO,IAAI;MACZ;MAEA,IAAMM,kBAAkB,GAAGT,EAAE,CAACG,sBAAsB,EAAE,iBAAiB,CAAC;MACxE,IAAG,CAACM,kBAAkB,EAAE;QACvB,OAAO,IAAI;MACZ;MAEA,IAAMC,OAAO,GAAGT,GAAG,CAACQ,kBAAkB,EAAE,QAAQ,CAAC;MACjDC,OAAO,CAACC,OAAO,CAAC,UAACC,EAAE,EAAK;QACvB,IAAIC,KAAK,GAAG,EAAE;QAEd,IAAID,EAAE,CAACE,UAAU,CAACC,MAAM,EAAE;UACzBF,KAAK,GAAGD,EAAE,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,SAAS;QACnC;QAEA,QAAQJ,EAAE,CAACK,UAAU,CAACC,IAAI,CAACL,KAAK;UAC5B,KAAK,aAAa;YACd,KAAI,CAACT,WAAW,GAAGS,KAAK;YACxB;UACJ,KAAK,cAAc;YACf,KAAI,CAACR,WAAW,GAAGQ,KAAK;YACxB;UACJ,KAAK,gBAAgB;YACjB,KAAI,CAACP,YAAY,GAAGO,KAAK;YACzB;UACJ,KAAK,kBAAkB;YACnB,KAAI,CAACN,eAAe,GAAGM,KAAK;YAC5B;QAAM;MAEf,CAAC,CAAC;MAEF,OAAO,IAAI;IACZ;EAAC;IAAA;IAAA,OAED,mBAAU;MACT,IAAI,CAACT,WAAW,GAAGe,SAAS;MAC5B,IAAI,CAACd,WAAW,GAAGc,SAAS;MAC5B,IAAI,CAACb,YAAY,GAAGa,SAAS;MAC7B,IAAI,CAACZ,eAAe,GAAGY,SAAS;IACjC;EAAC;EAAA;AAAA;AAGF,eAAejB,cAAc"},"metadata":{},"sourceType":"module"}