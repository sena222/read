{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// slices\nimport { pushHighlight, popHighlight, updateHighlight } from 'slices/book';\nimport { newSnackbar } from 'slices/snackbar';\n// utils\nimport { getParagraphCfi, clashCfiRange, getSelectionPosition, compareCfi, cfiRangeSpliter, getNodefromCfi } from 'lib/utils/commonUtil';\n// styles\nimport viewerLayout, { contextmenuWidth } from 'lib/styles/viewerLayout';\n// types\n\n/**\n * Epub Reader의 Highlight 관련 hook\n * - [selection]: 현재 selection의 정보\n * - [onSelection]: selection 적용 함수 (Iframe에 selection 이벤트로 등록해야 합니다.)\n * - [onClickHighlight]: highlight 클릭 함수\n * - [onAddHighlight] highlight 생성 함수\n * - [onRemoveHighlight]: highlight 제거 함수\n * - [onUpdateHighlight]: highlight 갱신 함수\n *\n * @param viewerRef Viewer에 등록된 가지고 있는 useRef\n * @param setIsContextMenu Contextmenu를 컨트롤 할 수 있는 useState 함수\n * \n * @example\n * const [isContextMenu, setIsContextMenu] = useState<boolean>(false);\n * \n * const { \n * \tselection, \n * \tonSelection, \n * \tonClickHighlight,\n * \tonRemoveHighlight\n * } = useSelection(viewerRef, setIsContextMenu);\n */\nconst useHighlight = (viewerRef, setIsContextMenu, bookStyle, bookFlow) => {\n  _s();\n  const dispatch = useDispatch();\n  const currentLocation = useSelector(state => state.book.currentLocation);\n  const highlights = useSelector(state => state.book.highlights);\n  const [selection, setSelection] = useState({\n    update: false,\n    x: 0,\n    y: 0,\n    height: 0,\n    cfiRange: '',\n    content: ''\n  });\n\n  /** \n   * Selection 발동 이벤트\n   * @param cfiRange CfiRange\n   * @return Whether event is success\n   */\n  const onSelection = useCallback(cfiRange => {\n    if (!viewerRef.current) return false;\n    const iframe = viewerRef.current.querySelector('iframe');\n    if (!iframe) return false;\n    const iframeWin = iframe.contentWindow;\n    if (!iframeWin) return false;\n    const filtered = highlights.filter(highlight => clashCfiRange(highlight.cfiRange, cfiRange));\n    if (filtered.length > 0) {\n      dispatch(newSnackbar({\n        text: \"There are already registered highlights in your selection.\",\n        type: \"WARNING\"\n      }));\n      iframeWin.getSelection().removeAllRanges();\n      return false;\n    }\n    const position = getSelectionPosition(viewerRef.current, bookStyle, bookFlow, viewerLayout.MIN_VIEWER_WIDTH, viewerLayout.MIN_VIEWER_HEIGHT, viewerLayout.VIEWER_HEADER_HEIGHT, contextmenuWidth);\n    if (!position) return false;\n    const {\n      x,\n      y,\n      height\n    } = position;\n    const content = iframeWin.getSelection().toString().trim();\n    if (content.length === 0) return false;\n    setSelection({\n      update: false,\n      x,\n      y,\n      height,\n      cfiRange,\n      content\n    });\n    return true;\n  }, [dispatch, viewerRef, highlights, bookFlow, bookStyle, setSelection]);\n\n  /** Highlight 클릭 이벤트 */\n  const onClickHighlight = useCallback(highlightNode => {\n    const targetNode = highlightNode.parentElement;\n    if (!targetNode) return;\n    const cfiRange = targetNode.dataset.epubcfi;\n    if (!cfiRange) return;\n    const {\n      x,\n      y,\n      width,\n      height\n    } = targetNode.getBoundingClientRect();\n    setSelection({\n      update: true,\n      x: x + width / 2 - contextmenuWidth / 2,\n      y: y + height,\n      height,\n      cfiRange,\n      content: \"\"\n    });\n  }, [setSelection]);\n\n  /** 하이라이트 생성 함수 */\n  const onAddHighlight = useCallback(color => {\n    const paragraphCfi = getParagraphCfi(selection.cfiRange);\n    if (!paragraphCfi) return;\n    const highlight = {\n      key: paragraphCfi + selection.cfiRange,\n      accessTime: new Date().toISOString(),\n      createTime: new Date().toISOString(),\n      color,\n      paragraphCfi,\n      cfiRange: selection.cfiRange,\n      chpaterName: currentLocation.chapterName,\n      pageNum: currentLocation.currentPage,\n      content: selection.content\n    };\n    dispatch(pushHighlight(highlight));\n    setSelection({\n      ...selection,\n      update: true\n    });\n  }, [dispatch, selection, currentLocation]);\n\n  /** \n    * 하이라이트 수정\n    * @param color 색상 Hex 코드\n    */\n  const onUpdateHighlight = useCallback((highlight, color) => {\n    if (!highlight) return;\n    dispatch(updateHighlight({\n      ...highlight,\n      color\n    }));\n  }, [dispatch]);\n\n  /** \n   * 하이라이트 제거 함수 \n   * @param key 북마크 식별값\n   */\n  const onRemoveHighlight = useCallback((key, cfiRange) => {\n    if (!viewerRef.current || !key) return;\n    dispatch(popHighlight(key));\n    dispatch(newSnackbar({\n      text: \"The highlight removed successful!\",\n      type: \"INFO\"\n    }));\n    viewerRef.current.offHighlight(cfiRange);\n  }, [dispatch, viewerRef]);\n\n  /**\n   * 하이라이트 여부 확인\n   * - 페이지 변경에 따른 하이라이트 확인 및 적용\n   */\n  useEffect(() => {\n    if (!viewerRef.current) return;\n    const iframe = viewerRef.current.querySelector('iframe');\n    if (!iframe) return;\n    const iframeWin = iframe.contentWindow;\n    if (!iframeWin) return;\n    highlights.forEach(highlight => {\n      const cfiRange = cfiRangeSpliter(highlight.cfiRange);\n      if (!cfiRange) return;\n      const {\n        startCfi\n      } = cfiRange;\n      if (compareCfi(currentLocation.startCfi, startCfi) < 1 && compareCfi(currentLocation.endCfi, startCfi) > -1) {\n        const node = getNodefromCfi(highlight.paragraphCfi);\n        if (!node) return;\n        viewerRef.current.onHighlight(highlight.cfiRange, e => {\n          onClickHighlight(e.target);\n          setIsContextMenu(true);\n        }, highlight.color);\n        iframeWin.getSelection().removeAllRanges();\n      }\n    });\n  }, [dispatch, viewerRef, currentLocation, highlights, onRemoveHighlight, onClickHighlight, setIsContextMenu]);\n  return {\n    selection,\n    onSelection,\n    onClickHighlight,\n    onAddHighlight,\n    onRemoveHighlight,\n    onUpdateHighlight\n  };\n};\n_s(useHighlight, \"Gc5db7j1HM/0tX1lm6wvdadsXm4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\nexport default useHighlight;","map":{"version":3,"names":["useState","useEffect","useCallback","useSelector","useDispatch","pushHighlight","popHighlight","updateHighlight","newSnackbar","getParagraphCfi","clashCfiRange","getSelectionPosition","compareCfi","cfiRangeSpliter","getNodefromCfi","viewerLayout","contextmenuWidth","useHighlight","viewerRef","setIsContextMenu","bookStyle","bookFlow","dispatch","currentLocation","state","book","highlights","selection","setSelection","update","x","y","height","cfiRange","content","onSelection","current","iframe","querySelector","iframeWin","contentWindow","filtered","filter","highlight","length","text","type","getSelection","removeAllRanges","position","MIN_VIEWER_WIDTH","MIN_VIEWER_HEIGHT","VIEWER_HEADER_HEIGHT","toString","trim","onClickHighlight","highlightNode","targetNode","parentElement","dataset","epubcfi","width","getBoundingClientRect","onAddHighlight","color","paragraphCfi","key","accessTime","Date","toISOString","createTime","chpaterName","chapterName","pageNum","currentPage","onUpdateHighlight","onRemoveHighlight","offHighlight","forEach","startCfi","endCfi","node","onHighlight","e","target"],"sources":["/home/parallels/Downloads/react-epub-viewer-demo/src/lib/hooks/useHighlight.ts"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n// slices\nimport { pushHighlight, popHighlight, updateHighlight } from 'slices/book'\nimport { newSnackbar } from 'slices/snackbar'\n// utils\nimport {  \n\tgetParagraphCfi,\n\tclashCfiRange, \n\tgetSelectionPosition,\n\tcompareCfi,\n\tcfiRangeSpliter,\n\tgetNodefromCfi\n} from 'lib/utils/commonUtil'\n// styles\nimport viewerLayout, { contextmenuWidth } from 'lib/styles/viewerLayout'\n// types\nimport { RootState } from 'slices'\nimport { BookStyle, BookFlow } from 'types/book'\nimport Page from 'types/page'\nimport Selection from 'types/selection'\nimport Highlight from 'types/highlight'\n\n\n/**\n * Epub Reader의 Highlight 관련 hook\n * - [selection]: 현재 selection의 정보\n * - [onSelection]: selection 적용 함수 (Iframe에 selection 이벤트로 등록해야 합니다.)\n * - [onClickHighlight]: highlight 클릭 함수\n * - [onAddHighlight] highlight 생성 함수\n * - [onRemoveHighlight]: highlight 제거 함수\n * - [onUpdateHighlight]: highlight 갱신 함수\n *\n * @param viewerRef Viewer에 등록된 가지고 있는 useRef\n * @param setIsContextMenu Contextmenu를 컨트롤 할 수 있는 useState 함수\n * \n * @example\n * const [isContextMenu, setIsContextMenu] = useState<boolean>(false);\n * \n * const { \n * \tselection, \n * \tonSelection, \n * \tonClickHighlight,\n * \tonRemoveHighlight\n * } = useSelection(viewerRef, setIsContextMenu);\n */\nconst useHighlight = (\n\tviewerRef: any, \n\tsetIsContextMenu: React.Dispatch<React.SetStateAction<boolean>>,\n\tbookStyle: BookStyle,\n\tbookFlow: BookFlow\n) => {\n\tconst dispatch = useDispatch();\n\tconst currentLocation = useSelector<RootState, Page>(state => state.book.currentLocation);\n\tconst highlights = useSelector<RootState, Highlight[]>(state => state.book.highlights);\n\n\tconst [selection, setSelection] = useState<Selection>({\n\t\tupdate: false,\n\t\tx: 0,\n\t\ty: 0,\n\t\theight: 0,\n\t\tcfiRange: '',\n\t\tcontent: ''\n\t});\n\t\n\n\t/** \n\t * Selection 발동 이벤트\n\t * @param cfiRange CfiRange\n\t * @return Whether event is success\n\t */\n\tconst onSelection = useCallback((cfiRange: string): boolean => {\n\t\tif (!viewerRef.current) return false;\n\n\t\tconst iframe = viewerRef.current.querySelector('iframe');\n\t\tif (!iframe) return false;\n\n\t\tconst iframeWin = iframe.contentWindow;\n\t\tif (!iframeWin) return false;\n\t\t\n\t\tconst filtered = highlights.filter(\n\t\t\thighlight => clashCfiRange(highlight.cfiRange, cfiRange)\n\t\t);\n\n\t\tif (filtered.length > 0) {\n\t\t\tdispatch(newSnackbar({\n        text: \"There are already registered highlights in your selection.\", \n        type: \"WARNING\" \n      }));\n\n\t\t\tiframeWin.getSelection().removeAllRanges();\n\t\t\treturn false;\n\t\t}\n\n\t\tconst position = getSelectionPosition(\n\t\t\tviewerRef.current,\n\t\t\tbookStyle,\n\t\t\tbookFlow,\n\t\t\tviewerLayout.MIN_VIEWER_WIDTH,\n\t\t\tviewerLayout.MIN_VIEWER_HEIGHT,\n\t\t\tviewerLayout.VIEWER_HEADER_HEIGHT,\n\t\t\tcontextmenuWidth\n\t\t);\n\t\tif (!position) return false;\n\n\t\tconst { x, y, height } = position;\n\n\t\tconst content = iframeWin.getSelection().toString().trim();\n\n\t\tif (content.length === 0) return false;\n\t\t\n\t\tsetSelection({ \n\t\t\tupdate: false,\n\t\t\tx, \n\t\t\ty,\n\t\t\theight,\n\t\t\tcfiRange,\n\t\t\tcontent\n\t\t});\n\t\t\n\t\treturn true;\n\t}, [\n\t\tdispatch, \n\t\tviewerRef,\n\t\thighlights, \n\t\tbookFlow, \n\t\tbookStyle,\n\t\tsetSelection\n\t]);\n\n\t/** Highlight 클릭 이벤트 */\n\tconst onClickHighlight = useCallback((highlightNode: HTMLElement) => {\n\t\tconst targetNode = highlightNode.parentElement;\n\t\tif (!targetNode) return;\n\n\t\tconst cfiRange = targetNode.dataset.epubcfi;\n\t\tif (!cfiRange) return;\n\n\t\tconst { x, y, width, height } = targetNode.getBoundingClientRect();\n\n\t\tsetSelection({ \n\t\t\tupdate: true,\n\t\t\tx: x + width / 2 - contextmenuWidth / 2, \n\t\t\ty: y + height,\n\t\t\theight,\n\t\t\tcfiRange,\n\t\t\tcontent: \"\"\n\t\t});\n\t}, [setSelection]);\n\n\t/** 하이라이트 생성 함수 */\n\tconst onAddHighlight = useCallback((color: string) => {\n    const paragraphCfi = getParagraphCfi(selection.cfiRange);\n    if (!paragraphCfi) return;\n    \n    const highlight: Highlight = {\n      key: paragraphCfi + selection.cfiRange,\n      accessTime: new Date().toISOString(),\n      createTime: new Date().toISOString(),\n      color,\n      paragraphCfi,\n      cfiRange: selection.cfiRange,\n      chpaterName: currentLocation.chapterName,\n      pageNum: currentLocation.currentPage,\n      content: selection.content\n    };\n\n    dispatch(pushHighlight(highlight));\n\n\t\tsetSelection({ ...selection, update: true });\n  }, [dispatch, selection, currentLocation]);\n\n\t/** \n   * 하이라이트 수정\n   * @param color 색상 Hex 코드\n   */\n\tconst onUpdateHighlight = useCallback((highlight: Highlight | null, color: string) => {\n\t\tif (!highlight) return;\n\n    dispatch(updateHighlight({\n      ...highlight,\n      color\n    }));\n  }, [dispatch]);\n\n\t/** \n\t * 하이라이트 제거 함수 \n\t * @param key 북마크 식별값\n\t */\n\t const onRemoveHighlight = useCallback((key: string, cfiRange: string) => {\n\t\tif (!viewerRef.current || !key) return;\n\n\t\tdispatch(popHighlight(key));\n\n\t\tdispatch(newSnackbar({\n\t\t\ttext: \"The highlight removed successful!\", \n\t\t\ttype: \"INFO\" \n\t\t}));\n\t\t\n\t\tviewerRef.current.offHighlight(cfiRange);\n\t}, [dispatch, viewerRef]);\n\n\n\t/**\n\t * 하이라이트 여부 확인\n\t * - 페이지 변경에 따른 하이라이트 확인 및 적용\n\t */\n\t useEffect(() => {\n\t\tif (!viewerRef.current) return;\n\n\t\tconst iframe = viewerRef.current.querySelector('iframe');\n\t\tif (!iframe) return;\n\n\t\tconst iframeWin = iframe.contentWindow;\n\t\tif (!iframeWin) return;\n\n\t\thighlights.forEach(highlight => {\n\t\t\tconst cfiRange = cfiRangeSpliter(highlight.cfiRange);\n\t\t\tif (!cfiRange) return;\n\n\t\t\tconst { startCfi } = cfiRange;\n\n\t\t\tif (compareCfi(currentLocation.startCfi, startCfi) < 1\n\t\t\t\t&& compareCfi(currentLocation.endCfi, startCfi) > -1) {\n\t\t\t\tconst node = getNodefromCfi(highlight.paragraphCfi);\n\t\t\t\tif (!node) return;\n\n\t\t\t\tviewerRef.current.onHighlight(\n\t\t\t\t\thighlight.cfiRange,\n\t\t\t\t\t(e: any) => {\n\t\t\t\t\t\tonClickHighlight(e.target);\n\t\t\t\t\t\tsetIsContextMenu(true);\n\t\t\t\t\t},\n\t\t\t\t\thighlight.color \n\t\t\t\t);\n\n\t\t\t\tiframeWin.getSelection().removeAllRanges();\n\t\t\t}\n\t\t});\n\t}, [\n\t\tdispatch,\n\t\tviewerRef, \n\t\tcurrentLocation, \n\t\thighlights, \n\t\tonRemoveHighlight,\n\t\tonClickHighlight,\n\t\tsetIsContextMenu\n\t]);\n\n\n\treturn { \n\t\tselection, \n\t\tonSelection, \n\t\tonClickHighlight,\n\t\tonAddHighlight,\n\t\tonRemoveHighlight,\n\t\tonUpdateHighlight\n\t};\n}\n\nexport default useHighlight;"],"mappings":";AAAA,SAAgBA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,SAASC,aAAa,EAAEC,YAAY,EAAEC,eAAe,QAAQ,aAAa;AAC1E,SAASC,WAAW,QAAQ,iBAAiB;AAC7C;AACA,SACCC,eAAe,EACfC,aAAa,EACbC,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfC,cAAc,QACR,sBAAsB;AAC7B;AACA,OAAOC,YAAY,IAAIC,gBAAgB,QAAQ,yBAAyB;AACxE;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG,CACpBC,SAAc,EACdC,gBAA+D,EAC/DC,SAAoB,EACpBC,QAAkB,KACd;EAAA;EACJ,MAAMC,QAAQ,GAAGlB,WAAW,EAAE;EAC9B,MAAMmB,eAAe,GAAGpB,WAAW,CAAkBqB,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACF,eAAe,CAAC;EACzF,MAAMG,UAAU,GAAGvB,WAAW,CAAyBqB,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC;EAEtF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAY;IACrD6B,MAAM,EAAE,KAAK;IACbC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;EACV,CAAC,CAAC;;EAGF;AACD;AACA;AACA;AACA;EACC,MAAMC,WAAW,GAAGjC,WAAW,CAAE+B,QAAgB,IAAc;IAC9D,IAAI,CAACf,SAAS,CAACkB,OAAO,EAAE,OAAO,KAAK;IAEpC,MAAMC,MAAM,GAAGnB,SAAS,CAACkB,OAAO,CAACE,aAAa,CAAC,QAAQ,CAAC;IACxD,IAAI,CAACD,MAAM,EAAE,OAAO,KAAK;IAEzB,MAAME,SAAS,GAAGF,MAAM,CAACG,aAAa;IACtC,IAAI,CAACD,SAAS,EAAE,OAAO,KAAK;IAE5B,MAAME,QAAQ,GAAGf,UAAU,CAACgB,MAAM,CACjCC,SAAS,IAAIjC,aAAa,CAACiC,SAAS,CAACV,QAAQ,EAAEA,QAAQ,CAAC,CACxD;IAED,IAAIQ,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;MACxBtB,QAAQ,CAACd,WAAW,CAAC;QAChBqC,IAAI,EAAE,4DAA4D;QAClEC,IAAI,EAAE;MACR,CAAC,CAAC,CAAC;MAENP,SAAS,CAACQ,YAAY,EAAE,CAACC,eAAe,EAAE;MAC1C,OAAO,KAAK;IACb;IAEA,MAAMC,QAAQ,GAAGtC,oBAAoB,CACpCO,SAAS,CAACkB,OAAO,EACjBhB,SAAS,EACTC,QAAQ,EACRN,YAAY,CAACmC,gBAAgB,EAC7BnC,YAAY,CAACoC,iBAAiB,EAC9BpC,YAAY,CAACqC,oBAAoB,EACjCpC,gBAAgB,CAChB;IACD,IAAI,CAACiC,QAAQ,EAAE,OAAO,KAAK;IAE3B,MAAM;MAAEnB,CAAC;MAAEC,CAAC;MAAEC;IAAO,CAAC,GAAGiB,QAAQ;IAEjC,MAAMf,OAAO,GAAGK,SAAS,CAACQ,YAAY,EAAE,CAACM,QAAQ,EAAE,CAACC,IAAI,EAAE;IAE1D,IAAIpB,OAAO,CAACU,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;IAEtChB,YAAY,CAAC;MACZC,MAAM,EAAE,KAAK;MACbC,CAAC;MACDC,CAAC;MACDC,MAAM;MACNC,QAAQ;MACRC;IACD,CAAC,CAAC;IAEF,OAAO,IAAI;EACZ,CAAC,EAAE,CACFZ,QAAQ,EACRJ,SAAS,EACTQ,UAAU,EACVL,QAAQ,EACRD,SAAS,EACTQ,YAAY,CACZ,CAAC;;EAEF;EACA,MAAM2B,gBAAgB,GAAGrD,WAAW,CAAEsD,aAA0B,IAAK;IACpE,MAAMC,UAAU,GAAGD,aAAa,CAACE,aAAa;IAC9C,IAAI,CAACD,UAAU,EAAE;IAEjB,MAAMxB,QAAQ,GAAGwB,UAAU,CAACE,OAAO,CAACC,OAAO;IAC3C,IAAI,CAAC3B,QAAQ,EAAE;IAEf,MAAM;MAAEH,CAAC;MAAEC,CAAC;MAAE8B,KAAK;MAAE7B;IAAO,CAAC,GAAGyB,UAAU,CAACK,qBAAqB,EAAE;IAElElC,YAAY,CAAC;MACZC,MAAM,EAAE,IAAI;MACZC,CAAC,EAAEA,CAAC,GAAG+B,KAAK,GAAG,CAAC,GAAG7C,gBAAgB,GAAG,CAAC;MACvCe,CAAC,EAAEA,CAAC,GAAGC,MAAM;MACbA,MAAM;MACNC,QAAQ;MACRC,OAAO,EAAE;IACV,CAAC,CAAC;EACH,CAAC,EAAE,CAACN,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMmC,cAAc,GAAG7D,WAAW,CAAE8D,KAAa,IAAK;IACnD,MAAMC,YAAY,GAAGxD,eAAe,CAACkB,SAAS,CAACM,QAAQ,CAAC;IACxD,IAAI,CAACgC,YAAY,EAAE;IAEnB,MAAMtB,SAAoB,GAAG;MAC3BuB,GAAG,EAAED,YAAY,GAAGtC,SAAS,CAACM,QAAQ;MACtCkC,UAAU,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MACpCC,UAAU,EAAE,IAAIF,IAAI,EAAE,CAACC,WAAW,EAAE;MACpCL,KAAK;MACLC,YAAY;MACZhC,QAAQ,EAAEN,SAAS,CAACM,QAAQ;MAC5BsC,WAAW,EAAEhD,eAAe,CAACiD,WAAW;MACxCC,OAAO,EAAElD,eAAe,CAACmD,WAAW;MACpCxC,OAAO,EAAEP,SAAS,CAACO;IACrB,CAAC;IAEDZ,QAAQ,CAACjB,aAAa,CAACsC,SAAS,CAAC,CAAC;IAEpCf,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAEE,MAAM,EAAE;IAAK,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACP,QAAQ,EAAEK,SAAS,EAAEJ,eAAe,CAAC,CAAC;;EAE3C;AACD;AACA;AACA;EACC,MAAMoD,iBAAiB,GAAGzE,WAAW,CAAC,CAACyC,SAA2B,EAAEqB,KAAa,KAAK;IACrF,IAAI,CAACrB,SAAS,EAAE;IAEdrB,QAAQ,CAACf,eAAe,CAAC;MACvB,GAAGoC,SAAS;MACZqB;IACF,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAAC1C,QAAQ,CAAC,CAAC;;EAEf;AACD;AACA;AACA;EACE,MAAMsD,iBAAiB,GAAG1E,WAAW,CAAC,CAACgE,GAAW,EAAEjC,QAAgB,KAAK;IACzE,IAAI,CAACf,SAAS,CAACkB,OAAO,IAAI,CAAC8B,GAAG,EAAE;IAEhC5C,QAAQ,CAAChB,YAAY,CAAC4D,GAAG,CAAC,CAAC;IAE3B5C,QAAQ,CAACd,WAAW,CAAC;MACpBqC,IAAI,EAAE,mCAAmC;MACzCC,IAAI,EAAE;IACP,CAAC,CAAC,CAAC;IAEH5B,SAAS,CAACkB,OAAO,CAACyC,YAAY,CAAC5C,QAAQ,CAAC;EACzC,CAAC,EAAE,CAACX,QAAQ,EAAEJ,SAAS,CAAC,CAAC;;EAGzB;AACD;AACA;AACA;EACEjB,SAAS,CAAC,MAAM;IAChB,IAAI,CAACiB,SAAS,CAACkB,OAAO,EAAE;IAExB,MAAMC,MAAM,GAAGnB,SAAS,CAACkB,OAAO,CAACE,aAAa,CAAC,QAAQ,CAAC;IACxD,IAAI,CAACD,MAAM,EAAE;IAEb,MAAME,SAAS,GAAGF,MAAM,CAACG,aAAa;IACtC,IAAI,CAACD,SAAS,EAAE;IAEhBb,UAAU,CAACoD,OAAO,CAACnC,SAAS,IAAI;MAC/B,MAAMV,QAAQ,GAAGpB,eAAe,CAAC8B,SAAS,CAACV,QAAQ,CAAC;MACpD,IAAI,CAACA,QAAQ,EAAE;MAEf,MAAM;QAAE8C;MAAS,CAAC,GAAG9C,QAAQ;MAE7B,IAAIrB,UAAU,CAACW,eAAe,CAACwD,QAAQ,EAAEA,QAAQ,CAAC,GAAG,CAAC,IAClDnE,UAAU,CAACW,eAAe,CAACyD,MAAM,EAAED,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;QACtD,MAAME,IAAI,GAAGnE,cAAc,CAAC6B,SAAS,CAACsB,YAAY,CAAC;QACnD,IAAI,CAACgB,IAAI,EAAE;QAEX/D,SAAS,CAACkB,OAAO,CAAC8C,WAAW,CAC5BvC,SAAS,CAACV,QAAQ,EACjBkD,CAAM,IAAK;UACX5B,gBAAgB,CAAC4B,CAAC,CAACC,MAAM,CAAC;UAC1BjE,gBAAgB,CAAC,IAAI,CAAC;QACvB,CAAC,EACDwB,SAAS,CAACqB,KAAK,CACf;QAEDzB,SAAS,CAACQ,YAAY,EAAE,CAACC,eAAe,EAAE;MAC3C;IACD,CAAC,CAAC;EACH,CAAC,EAAE,CACF1B,QAAQ,EACRJ,SAAS,EACTK,eAAe,EACfG,UAAU,EACVkD,iBAAiB,EACjBrB,gBAAgB,EAChBpC,gBAAgB,CAChB,CAAC;EAGF,OAAO;IACNQ,SAAS;IACTQ,WAAW;IACXoB,gBAAgB;IAChBQ,cAAc;IACda,iBAAiB;IACjBD;EACD,CAAC;AACF,CAAC;AAAA,GApNK1D,YAAY;EAAA,QAMAb,WAAW,EACJD,WAAW,EAChBA,WAAW;AAAA;AA8M/B,eAAec,YAAY"},"metadata":{},"sourceType":"module"}