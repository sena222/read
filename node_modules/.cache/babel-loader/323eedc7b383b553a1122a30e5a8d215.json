{"ast":null,"code":"import EpubCFI from \"./epubcfi\";\nimport Hook from \"./utils/hook\";\nimport Section from \"./section\";\nimport { replaceBase, replaceCanonical, replaceMeta } from \"./utils/replacements\";\n\n/**\n * A collection of Spine Items\n */\nclass Spine {\n  constructor() {\n    this.spineItems = [];\n    this.spineByHref = {};\n    this.spineById = {};\n    this.hooks = {};\n    this.hooks.serialize = new Hook();\n    this.hooks.content = new Hook();\n\n    // Register replacements\n    this.hooks.content.register(replaceBase);\n    this.hooks.content.register(replaceCanonical);\n    this.hooks.content.register(replaceMeta);\n    this.epubcfi = new EpubCFI();\n    this.loaded = false;\n    this.items = undefined;\n    this.manifest = undefined;\n    this.spineNodeIndex = undefined;\n    this.baseUrl = undefined;\n    this.length = undefined;\n  }\n\n  /**\n   * Unpack items from a opf into spine items\n   * @param  {Packaging} _package\n   * @param  {method} resolver URL resolver\n   * @param  {method} canonical Resolve canonical url\n   */\n  unpack(_package, resolver, canonical) {\n    this.items = _package.spine;\n    this.manifest = _package.manifest;\n    this.spineNodeIndex = _package.spineNodeIndex;\n    this.baseUrl = _package.baseUrl || _package.basePath || \"\";\n    this.length = this.items.length;\n    this.items.forEach((item, index) => {\n      var manifestItem = this.manifest[item.idref];\n      var spineItem;\n      item.index = index;\n      item.cfiBase = this.epubcfi.generateChapterComponent(this.spineNodeIndex, item.index, item.id);\n      if (item.href) {\n        item.url = resolver(item.href, true);\n        item.canonical = canonical(item.href);\n      }\n      if (manifestItem) {\n        item.href = manifestItem.href;\n        item.url = resolver(item.href, true);\n        item.canonical = canonical(item.href);\n        if (manifestItem.properties.length) {\n          item.properties.push.apply(item.properties, manifestItem.properties);\n        }\n      }\n      if (item.linear === \"yes\") {\n        item.prev = function () {\n          let prevIndex = item.index;\n          while (prevIndex > 0) {\n            let prev = this.get(prevIndex - 1);\n            if (prev && prev.linear) {\n              return prev;\n            }\n            prevIndex -= 1;\n          }\n          return;\n        }.bind(this);\n        item.next = function () {\n          let nextIndex = item.index;\n          while (nextIndex < this.spineItems.length - 1) {\n            let next = this.get(nextIndex + 1);\n            if (next && next.linear) {\n              return next;\n            }\n            nextIndex += 1;\n          }\n          return;\n        }.bind(this);\n      } else {\n        item.prev = function () {\n          return;\n        };\n        item.next = function () {\n          return;\n        };\n      }\n      spineItem = new Section(item, this.hooks);\n      this.append(spineItem);\n    });\n    this.loaded = true;\n  }\n\n  /**\n   * Get an item from the spine\n   * @param  {string|number} [target]\n   * @return {Section} section\n   * @example spine.get();\n   * @example spine.get(1);\n   * @example spine.get(\"chap1.html\");\n   * @example spine.get(\"#id1234\");\n   */\n  get(target) {\n    var index = 0;\n    if (typeof target === \"undefined\") {\n      while (index < this.spineItems.length) {\n        let next = this.spineItems[index];\n        if (next && next.linear) {\n          break;\n        }\n        index += 1;\n      }\n    } else if (this.epubcfi.isCfiString(target)) {\n      let cfi = new EpubCFI(target);\n      index = cfi.spinePos;\n    } else if (typeof target === \"number\" || isNaN(target) === false) {\n      index = target;\n    } else if (typeof target === \"string\" && target.indexOf(\"#\") === 0) {\n      index = this.spineById[target.substring(1)];\n    } else if (typeof target === \"string\") {\n      // Remove fragments\n      target = target.split(\"#\")[0];\n      index = this.spineByHref[target] || this.spineByHref[encodeURI(target)];\n    }\n    return this.spineItems[index] || null;\n  }\n\n  /**\n   * Append a Section to the Spine\n   * @private\n   * @param  {Section} section\n   */\n  append(section) {\n    var index = this.spineItems.length;\n    section.index = index;\n    this.spineItems.push(section);\n\n    // Encode and Decode href lookups\n    // see pr for details: https://github.com/futurepress/epub.js/pull/358\n    this.spineByHref[decodeURI(section.href)] = index;\n    this.spineByHref[encodeURI(section.href)] = index;\n    this.spineByHref[section.href] = index;\n    this.spineById[section.idref] = index;\n    return index;\n  }\n\n  /**\n   * Prepend a Section to the Spine\n   * @private\n   * @param  {Section} section\n   */\n  prepend(section) {\n    // var index = this.spineItems.unshift(section);\n    this.spineByHref[section.href] = 0;\n    this.spineById[section.idref] = 0;\n\n    // Re-index\n    this.spineItems.forEach(function (item, index) {\n      item.index = index;\n    });\n    return 0;\n  }\n\n  // insert(section, index) {\n  //\n  // };\n\n  /**\n   * Remove a Section from the Spine\n   * @private\n   * @param  {Section} section\n   */\n  remove(section) {\n    var index = this.spineItems.indexOf(section);\n    if (index > -1) {\n      delete this.spineByHref[section.href];\n      delete this.spineById[section.idref];\n      return this.spineItems.splice(index, 1);\n    }\n  }\n\n  /**\n   * Loop over the Sections in the Spine\n   * @return {method} forEach\n   */\n  each() {\n    return this.spineItems.forEach.apply(this.spineItems, arguments);\n  }\n\n  /**\n   * Find the first Section in the Spine\n   * @return {Section} first section\n   */\n  first() {\n    let index = 0;\n    do {\n      let next = this.get(index);\n      if (next && next.linear) {\n        return next;\n      }\n      index += 1;\n    } while (index < this.spineItems.length);\n  }\n\n  /**\n   * Find the last Section in the Spine\n   * @return {Section} last section\n   */\n  last() {\n    let index = this.spineItems.length - 1;\n    do {\n      let prev = this.get(index);\n      if (prev && prev.linear) {\n        return prev;\n      }\n      index -= 1;\n    } while (index >= 0);\n  }\n  destroy() {\n    this.each(section => section.destroy());\n    this.spineItems = undefined;\n    this.spineByHref = undefined;\n    this.spineById = undefined;\n    this.hooks.serialize.clear();\n    this.hooks.content.clear();\n    this.hooks = undefined;\n    this.epubcfi = undefined;\n    this.loaded = false;\n    this.items = undefined;\n    this.manifest = undefined;\n    this.spineNodeIndex = undefined;\n    this.baseUrl = undefined;\n    this.length = undefined;\n  }\n}\nexport default Spine;","map":{"version":3,"names":["EpubCFI","Hook","Section","replaceBase","replaceCanonical","replaceMeta","Spine","constructor","spineItems","spineByHref","spineById","hooks","serialize","content","register","epubcfi","loaded","items","undefined","manifest","spineNodeIndex","baseUrl","length","unpack","_package","resolver","canonical","spine","basePath","forEach","item","index","manifestItem","idref","spineItem","cfiBase","generateChapterComponent","id","href","url","properties","push","apply","linear","prev","prevIndex","get","bind","next","nextIndex","append","target","isCfiString","cfi","spinePos","isNaN","indexOf","substring","split","encodeURI","section","decodeURI","prepend","remove","splice","each","arguments","first","last","destroy","clear"],"sources":["/home/parallels/Downloads/react-epub-viewer-demo/node_modules/epubjs/src/spine.js"],"sourcesContent":["import EpubCFI from \"./epubcfi\";\nimport Hook from \"./utils/hook\";\nimport Section from \"./section\";\nimport {replaceBase, replaceCanonical, replaceMeta} from \"./utils/replacements\";\n\n/**\n * A collection of Spine Items\n */\nclass Spine {\n\tconstructor() {\n\t\tthis.spineItems = [];\n\t\tthis.spineByHref = {};\n\t\tthis.spineById = {};\n\n\t\tthis.hooks = {};\n\t\tthis.hooks.serialize = new Hook();\n\t\tthis.hooks.content = new Hook();\n\n\t\t// Register replacements\n\t\tthis.hooks.content.register(replaceBase);\n\t\tthis.hooks.content.register(replaceCanonical);\n\t\tthis.hooks.content.register(replaceMeta);\n\n\t\tthis.epubcfi = new EpubCFI();\n\n\t\tthis.loaded = false;\n\n\t\tthis.items = undefined;\n\t\tthis.manifest = undefined;\n\t\tthis.spineNodeIndex = undefined;\n\t\tthis.baseUrl = undefined;\n\t\tthis.length = undefined;\n\t}\n\n\t/**\n\t * Unpack items from a opf into spine items\n\t * @param  {Packaging} _package\n\t * @param  {method} resolver URL resolver\n\t * @param  {method} canonical Resolve canonical url\n\t */\n\tunpack(_package, resolver, canonical) {\n\n\t\tthis.items = _package.spine;\n\t\tthis.manifest = _package.manifest;\n\t\tthis.spineNodeIndex = _package.spineNodeIndex;\n\t\tthis.baseUrl = _package.baseUrl || _package.basePath || \"\";\n\t\tthis.length = this.items.length;\n\n\t\tthis.items.forEach( (item, index) => {\n\t\t\tvar manifestItem = this.manifest[item.idref];\n\t\t\tvar spineItem;\n\n\t\t\titem.index = index;\n\t\t\titem.cfiBase = this.epubcfi.generateChapterComponent(this.spineNodeIndex, item.index, item.id);\n\n\t\t\tif (item.href) {\n\t\t\t\titem.url = resolver(item.href, true);\n\t\t\t\titem.canonical = canonical(item.href);\n\t\t\t}\n\n\t\t\tif(manifestItem) {\n\t\t\t\titem.href = manifestItem.href;\n\t\t\t\titem.url = resolver(item.href, true);\n\t\t\t\titem.canonical = canonical(item.href);\n\n\t\t\t\tif(manifestItem.properties.length){\n\t\t\t\t\titem.properties.push.apply(item.properties, manifestItem.properties);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (item.linear === \"yes\") {\n\t\t\t\titem.prev = function() {\n\t\t\t\t\tlet prevIndex = item.index;\n\t\t\t\t\twhile (prevIndex > 0) {\n\t\t\t\t\t\tlet prev = this.get(prevIndex-1);\n\t\t\t\t\t\tif (prev && prev.linear) {\n\t\t\t\t\t\t\treturn prev;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevIndex -= 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}.bind(this);\n\t\t\t\titem.next = function() {\n\t\t\t\t\tlet nextIndex = item.index;\n\t\t\t\t\twhile (nextIndex < this.spineItems.length-1) {\n\t\t\t\t\t\tlet next = this.get(nextIndex+1);\n\t\t\t\t\t\tif (next && next.linear) {\n\t\t\t\t\t\t\treturn next;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}.bind(this);\n\t\t\t} else {\n\t\t\t\titem.prev = function() {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\titem.next = function() {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tspineItem = new Section(item, this.hooks);\n\n\t\t\tthis.append(spineItem);\n\n\n\t\t});\n\n\t\tthis.loaded = true;\n\t}\n\n\t/**\n\t * Get an item from the spine\n\t * @param  {string|number} [target]\n\t * @return {Section} section\n\t * @example spine.get();\n\t * @example spine.get(1);\n\t * @example spine.get(\"chap1.html\");\n\t * @example spine.get(\"#id1234\");\n\t */\n\tget(target) {\n\t\tvar index = 0;\n\n\t\tif (typeof target === \"undefined\") {\n\t\t\twhile (index < this.spineItems.length) {\n\t\t\t\tlet next = this.spineItems[index];\n\t\t\t\tif (next && next.linear) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tindex += 1;\n\t\t\t}\n\t\t} else if(this.epubcfi.isCfiString(target)) {\n\t\t\tlet cfi = new EpubCFI(target);\n\t\t\tindex = cfi.spinePos;\n\t\t} else if(typeof target === \"number\" || isNaN(target) === false){\n\t\t\tindex = target;\n\t\t} else if(typeof target === \"string\" && target.indexOf(\"#\") === 0) {\n\t\t\tindex = this.spineById[target.substring(1)];\n\t\t} else if(typeof target === \"string\") {\n\t\t\t// Remove fragments\n\t\t\ttarget = target.split(\"#\")[0];\n\t\t\tindex = this.spineByHref[target] || this.spineByHref[encodeURI(target)];\n\t\t}\n\n\t\treturn this.spineItems[index] || null;\n\t}\n\n\t/**\n\t * Append a Section to the Spine\n\t * @private\n\t * @param  {Section} section\n\t */\n\tappend(section) {\n\t\tvar index = this.spineItems.length;\n\t\tsection.index = index;\n\n\t\tthis.spineItems.push(section);\n\n\t\t// Encode and Decode href lookups\n\t\t// see pr for details: https://github.com/futurepress/epub.js/pull/358\n\t\tthis.spineByHref[decodeURI(section.href)] = index;\n\t\tthis.spineByHref[encodeURI(section.href)] = index;\n\t\tthis.spineByHref[section.href] = index;\n\n\t\tthis.spineById[section.idref] = index;\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Prepend a Section to the Spine\n\t * @private\n\t * @param  {Section} section\n\t */\n\tprepend(section) {\n\t\t// var index = this.spineItems.unshift(section);\n\t\tthis.spineByHref[section.href] = 0;\n\t\tthis.spineById[section.idref] = 0;\n\n\t\t// Re-index\n\t\tthis.spineItems.forEach(function(item, index){\n\t\t\titem.index = index;\n\t\t});\n\n\t\treturn 0;\n\t}\n\n\t// insert(section, index) {\n\t//\n\t// };\n\n\t/**\n\t * Remove a Section from the Spine\n\t * @private\n\t * @param  {Section} section\n\t */\n\tremove(section) {\n\t\tvar index = this.spineItems.indexOf(section);\n\n\t\tif(index > -1) {\n\t\t\tdelete this.spineByHref[section.href];\n\t\t\tdelete this.spineById[section.idref];\n\n\t\t\treturn this.spineItems.splice(index, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Loop over the Sections in the Spine\n\t * @return {method} forEach\n\t */\n\teach() {\n\t\treturn this.spineItems.forEach.apply(this.spineItems, arguments);\n\t}\n\n\t/**\n\t * Find the first Section in the Spine\n\t * @return {Section} first section\n\t */\n\tfirst() {\n\t\tlet index = 0;\n\n\t\tdo {\n\t\t\tlet next = this.get(index);\n\n\t\t\tif (next && next.linear) {\n\t\t\t\treturn next;\n\t\t\t}\n\t\t\tindex += 1;\n\t\t} while (index < this.spineItems.length) ;\n\t}\n\n\t/**\n\t * Find the last Section in the Spine\n\t * @return {Section} last section\n\t */\n\tlast() {\n\t\tlet index = this.spineItems.length-1;\n\n\t\tdo {\n\t\t\tlet prev = this.get(index);\n\t\t\tif (prev && prev.linear) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tindex -= 1;\n\t\t} while (index >= 0);\n\t}\n\n\tdestroy() {\n\t\tthis.each((section) => section.destroy());\n\n\t\tthis.spineItems = undefined\n\t\tthis.spineByHref = undefined\n\t\tthis.spineById = undefined\n\n\t\tthis.hooks.serialize.clear();\n\t\tthis.hooks.content.clear();\n\t\tthis.hooks = undefined;\n\n\t\tthis.epubcfi = undefined;\n\n\t\tthis.loaded = false;\n\n\t\tthis.items = undefined;\n\t\tthis.manifest = undefined;\n\t\tthis.spineNodeIndex = undefined;\n\t\tthis.baseUrl = undefined;\n\t\tthis.length = undefined;\n\t}\n}\n\nexport default Spine;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}