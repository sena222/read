{"ast":null,"code":"var _jsxFileName = \"/home/parallels/Downloads/react-epub-viewer-demo/src/containers/menu/Note.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n// containers\nimport Highlight from 'containers/menu/commons/Highlight';\n// components\nimport Wrapper from 'components/sideMenu/Wrapper';\nimport LearningLayout from 'components/note/Layout';\nimport MenuEmpty from 'components/sideMenu/MenuEmpty';\n// types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Note = (_ref, ref) => {\n  _s();\n  let {\n    control,\n    onToggle,\n    onClickHighlight,\n    emitEvent,\n    viewerRef\n  } = _ref;\n  const highlights = useSelector(state => state.book.highlights);\n  const [highlightList, setHighlightList] = useState([]);\n\n  /** Set highlight contents */\n  useEffect(() => {\n    const Items = highlights.map(h => /*#__PURE__*/_jsxDEV(Highlight, {\n      highlight: h,\n      onClick: onClickHighlight,\n      emitEvent: emitEvent,\n      viewerRef: viewerRef\n    }, h.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }, this));\n    setHighlightList(Items);\n  }, [viewerRef, highlights, onClickHighlight, emitEvent, setHighlightList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: control.display && /*#__PURE__*/_jsxDEV(Wrapper, {\n      title: \"Highlight\",\n      show: control.open,\n      onClose: onToggle,\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(LearningLayout, {\n        children: highlightList.length > 0 ? highlightList : /*#__PURE__*/_jsxDEV(MenuEmpty, {\n          text: \"Empty highlights!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this)\n  }, void 0, false);\n};\n_s(Note, \"n/jljKD/+gecYD5zsEjpZDM/eAE=\", false, function () {\n  return [useSelector];\n});\n_c = Note;\nexport default _c2 = /*#__PURE__*/React.forwardRef(Note);\nvar _c, _c2;\n$RefreshReg$(_c, \"Note\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","Highlight","Wrapper","LearningLayout","MenuEmpty","Note","ref","control","onToggle","onClickHighlight","emitEvent","viewerRef","highlights","state","book","highlightList","setHighlightList","Items","map","h","key","display","open","length","forwardRef"],"sources":["/home/parallels/Downloads/react-epub-viewer-demo/src/containers/menu/Note.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n// containers\nimport Highlight from 'containers/menu/commons/Highlight'\n// components\nimport Wrapper from 'components/sideMenu/Wrapper'\nimport LearningLayout from 'components/note/Layout'\nimport MenuEmpty from 'components/sideMenu/MenuEmpty'\n// types\nimport { RootState } from 'slices'\nimport HighlightType from 'types/highlight'\nimport { MenuControl } from 'lib/hooks/useMenu'\n\n\nconst Note = ({ \n  control, \n  onToggle, \n  onClickHighlight, \n  emitEvent,\n  viewerRef \n}: Props, ref: any) => {\n  const highlights = useSelector<RootState, HighlightType[]>(state => state.book.highlights);\n  const [highlightList, setHighlightList] = useState<any[]>([]);\n\n\n  /** Set highlight contents */\n  useEffect(() => {\n    const Items = highlights.map(h => <Highlight key={h.key} \n                                                 highlight={h}\n                                                 onClick={onClickHighlight} \n                                                 emitEvent={emitEvent}\n                                                 viewerRef={viewerRef} />\n    );\n    setHighlightList(Items); \n  }, [\n    viewerRef,\n    highlights,\n    onClickHighlight,\n    emitEvent,\n    setHighlightList\n  ]);\n\n\n  return (<>\n    {control.display && <Wrapper title=\"Highlight\"\n                                 show={control.open}\n                                 onClose={onToggle}\n                                 ref={ref} >\n      <LearningLayout>\n        {highlightList.length > 0\n          ? highlightList\n          : <MenuEmpty text=\"Empty highlights!\" />\n        }\n      </LearningLayout>\n    </Wrapper>}\n  </>);\n}\n\ninterface Props {\n  control: MenuControl;\n  onToggle: () => void;\n  onClickHighlight: (highlightNode: any) => void;\n  emitEvent: () => void;\n  viewerRef: any;\n}\n\nexport default React.forwardRef(Note)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC;AACA,OAAOC,SAAS,MAAM,mCAAmC;AACzD;AACA,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,SAAS,MAAM,+BAA+B;AACrD;AAAA;AAAA;AAMA,MAAMC,IAAI,GAAG,OAMHC,GAAQ,KAAK;EAAA;EAAA,IANT;IACZC,OAAO;IACPC,QAAQ;IACRC,gBAAgB;IAChBC,SAAS;IACTC;EACK,CAAC;EACN,MAAMC,UAAU,GAAGZ,WAAW,CAA6Ba,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC1F,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAQ,EAAE,CAAC;;EAG7D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAGL,UAAU,CAACM,GAAG,CAACC,CAAC,iBAAI,QAAC,SAAS;MACC,SAAS,EAAEA,CAAE;MACb,OAAO,EAAEV,gBAAiB;MAC1B,SAAS,EAAEC,SAAU;MACrB,SAAS,EAAEC;IAAU,GAJhBQ,CAAC,CAACC,GAAG;MAAA;MAAA;MAAA;IAAA,QAIc,CACpE;IACDJ,gBAAgB,CAACC,KAAK,CAAC;EACzB,CAAC,EAAE,CACDN,SAAS,EACTC,UAAU,EACVH,gBAAgB,EAChBC,SAAS,EACTM,gBAAgB,CACjB,CAAC;EAGF,oBAAQ;IAAA,UACLT,OAAO,CAACc,OAAO,iBAAI,QAAC,OAAO;MAAC,KAAK,EAAC,WAAW;MACjB,IAAI,EAAEd,OAAO,CAACe,IAAK;MACnB,OAAO,EAAEd,QAAS;MAClB,GAAG,EAAEF,GAAI;MAAA,uBACpC,QAAC,cAAc;QAAA,UACZS,aAAa,CAACQ,MAAM,GAAG,CAAC,GACrBR,aAAa,gBACb,QAAC,SAAS;UAAC,IAAI,EAAC;QAAmB;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IAE3B;MAAA;MAAA;MAAA;IAAA;EACT,iBACT;AACL,CAAC;AAAA,GA1CKV,IAAI;EAAA,QAOWL,WAAW;AAAA;AAAA,KAP1BK,IAAI;AAoDV,kCAAeR,KAAK,CAAC2B,UAAU,CAACnB,IAAI,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}